/**
 * Angular XYFlow 基礎樣式
 * 
 * 核心組件的基礎樣式定義，完全兼容 React Flow 的樣式結構
 * 使用 CSS 變量系統，支持主題切換和自定義
 */

/* ===================
   主容器樣式
   =================== */

.xy-flow {
  /* 基礎容器樣式 - 遵循 React Flow 的定義，不使用 overflow: hidden */
  position: relative;
  width: 100%;
  height: 100%;
  z-index: 0;
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", "Roboto", sans-serif;
  
  /* 背景顏色 */
  background: var(
    --xy-background-color-props,
    var(--xy-background-color, var(--xy-background-color-default))
  );
  
  /* 用戶選擇禁用 */
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  
  /* 觸控操作 */
  touch-action: pan-x pan-y;
}

/* 允許文本選擇的元素 */
.xy-flow .xy-flow__node-default,
.xy-flow .xy-flow__node-input,
.xy-flow .xy-flow__node-output {
  -webkit-user-select: text;
  -moz-user-select: text;
  -ms-user-select: text;
  user-select: text;
}

/* ===================
   節點基礎樣式
   =================== */

.xy-flow__node {
  position: absolute;
  cursor: pointer;
  transform-origin: 0 0;
  box-sizing: border-box;
  
  /* 節點顏色 */
  color: var(
    --xy-node-color-props,
    var(--xy-node-color, var(--xy-node-color-default))
  );
  
  /* 節點背景 */
  background: var(
    --xy-node-background-color-props,
    var(--xy-node-background-color, var(--xy-node-background-color-default))
  );
  
  /* 節點邊框 */
  border: var(
    --xy-node-border-props,
    var(--xy-node-border, var(--xy-node-border-default))
  );
  
  /* 節點圓角 */
  border-radius: var(
    --xy-node-border-radius-props,
    var(--xy-node-border-radius, var(--xy-node-border-radius-default))
  );
  
  /* 最小尺寸 */
  min-width: var(
    --xy-node-min-width-props,
    var(--xy-node-min-width, var(--xy-node-min-width-default))
  );
  
  min-height: var(
    --xy-node-min-height-props,
    var(--xy-node-min-height, var(--xy-node-min-height-default))
  );
  
  /* 內邊距 */
  padding: var(
    --xy-node-padding-props,
    var(--xy-node-padding, var(--xy-node-padding-default))
  );
  
  /* Z-index */
  z-index: var(
    --xy-node-z-index-props,
    var(--xy-node-z-index, var(--xy-node-z-index-default))
  );
  
  /* 過渡效果 */
  transition: box-shadow var(--xy-transition-duration-default) var(--xy-transition-timing-function-default);
}

/* 節點狀態樣式 */
.xy-flow__node:hover {
  box-shadow: var(
    --xy-node-boxshadow-hover-props,
    var(--xy-node-boxshadow-hover, var(--xy-node-boxshadow-hover-default))
  );
}

.xy-flow__node.selected {
  box-shadow: var(
    --xy-node-boxshadow-selected-props,
    var(--xy-node-boxshadow-selected, var(--xy-node-boxshadow-selected-default))
  );
}

.xy-flow__node.dragging {
  cursor: grabbing;
  z-index: 1000;
}

.xy-flow__node:focus,
.xy-flow__node:focus-visible {
  outline: var(--xy-focus-outline-default);
  outline-offset: 2px;
}

/* 節點不可選擇狀態 */
.xy-flow__node.nopan {
  pointer-events: all;
}

/* 隱藏節點 */
.xy-flow__node.hidden {
  display: none;
}

/* ===================
   節點類型樣式
   =================== */

/* 默認節點 */
.xy-flow__node-default {
  /* 使用基礎節點樣式 */
}

/* 輸入節點 */
.xy-flow__node-input {
  background: var(
    --xy-node-input-background-color-props,
    var(--xy-node-input-background-color, var(--xy-node-input-background-color-default))
  );
  
  border-color: var(
    --xy-node-input-border-color-props,
    var(--xy-node-input-border-color, var(--xy-node-input-border-color-default))
  );
}

/* 輸出節點 */
.xy-flow__node-output {
  background: var(
    --xy-node-output-background-color-props,
    var(--xy-node-output-background-color, var(--xy-node-output-background-color-default))
  );
  
  border-color: var(
    --xy-node-output-border-color-props,
    var(--xy-node-output-border-color, var(--xy-node-output-border-color-default))
  );
}

/* 群組節點 */
.xy-flow__node-group {
  background: var(
    --xy-node-group-background-color-props,
    var(--xy-node-group-background-color, var(--xy-node-group-background-color-default))
  );
  
  border-color: var(
    --xy-node-group-border-color-props,
    var(--xy-node-group-border-color, var(--xy-node-group-border-color-default))
  );
}

/* ===================
   邊線基礎樣式
   =================== */

.xy-flow__edge {
  pointer-events: visibleStroke;
  fill: none;
  
  /* Z-index */
  z-index: var(
    --xy-edge-z-index-props,
    var(--xy-edge-z-index, var(--xy-edge-z-index-default))
  );
}

.xy-flow__edge path {
  /* 邊線顏色 */
  stroke: var(
    --xy-edge-stroke-props,
    var(--xy-edge-stroke, var(--xy-edge-stroke-default))
  );
  
  /* 邊線寬度 */
  stroke-width: var(
    --xy-edge-stroke-width-props,
    var(--xy-edge-stroke-width, var(--xy-edge-stroke-width-default))
  );
  
  /* 過渡效果 */
  transition: stroke var(--xy-transition-duration-default) var(--xy-transition-timing-function-default),
              stroke-width var(--xy-transition-duration-default) var(--xy-transition-timing-function-default);
}

/* 邊線狀態樣式 */
.xy-flow__edge:hover path {
  stroke-width: var(
    --xy-edge-stroke-width-hover-props,
    var(--xy-edge-stroke-width-hover, var(--xy-edge-stroke-width-hover-default))
  );
}

.xy-flow__edge.selected path {
  stroke: var(
    --xy-edge-stroke-selected-props,
    var(--xy-edge-stroke-selected, var(--xy-edge-stroke-selected-default))
  );
  
  stroke-width: var(
    --xy-edge-stroke-width-selected-props,
    var(--xy-edge-stroke-width-selected, var(--xy-edge-stroke-width-selected-default))
  );
}

.xy-flow__edge:focus,
.xy-flow__edge:focus-visible {
  outline: var(--xy-focus-outline-default);
  outline-offset: 2px;
}

/* 邊線動畫 */
.xy-flow__edge.animated path {
  stroke-dasharray: 5;
  animation: dashdraw 0.5s linear infinite;
}

@keyframes dashdraw {
  to {
    stroke-dashoffset: -10;
  }
}

/* 隱藏邊線 */
.xy-flow__edge.hidden {
  display: none;
}

/* ===================
   連接點基礎樣式
   =================== */

.xy-flow__handle {
  position: absolute;
  pointer-events: none;
  min-width: var(
    --xy-handle-size-props,
    var(--xy-handle-size, var(--xy-handle-size-default))
  );
  
  min-height: var(
    --xy-handle-size-props,
    var(--xy-handle-size, var(--xy-handle-size-default))
  );
  
  /* 連接點背景 */
  background: var(
    --xy-handle-background-color-props,
    var(--xy-handle-background-color, var(--xy-handle-background-color-default))
  );
  
  /* 連接點邊框 */
  border: 1px solid var(
    --xy-handle-border-color-props,
    var(--xy-handle-border-color, var(--xy-handle-border-color-default))
  );
  
  /* 連接點圓角 */
  border-radius: var(
    --xy-handle-border-radius-props,
    var(--xy-handle-border-radius, var(--xy-handle-border-radius-default))
  );
  
  /* Z-index */
  z-index: var(
    --xy-handle-z-index-props,
    var(--xy-handle-z-index, var(--xy-handle-z-index-default))
  );
  
  /* 過渡效果 */
  transition: all var(--xy-transition-duration-default) var(--xy-transition-timing-function-default);
}

/* 連接點可連接狀態 */
.xy-flow__handle.connectable {
  pointer-events: all;
  cursor: crosshair;
}

.xy-flow__handle.connectable:hover {
  transform: scale(1.1);
}

/* 連接點位置樣式 */
.xy-flow__handle-top {
  top: -4px;
  left: 50%;
  transform: translate(-50%, 0);
}

.xy-flow__handle-right {
  top: 50%;
  right: -4px;
  transform: translate(0, -50%);
}

.xy-flow__handle-bottom {
  bottom: -4px;
  left: 50%;
  transform: translate(-50%, 0);
}

.xy-flow__handle-left {
  top: 50%;
  left: -4px;
  transform: translate(0, -50%);
}

/* 連接點類型樣式 */
.xy-flow__handle.source {
  /* 源連接點特定樣式 */
}

.xy-flow__handle.target {
  /* 目標連接點特定樣式 */
}

/* 連接點焦點樣式 */
.xy-flow__handle:focus,
.xy-flow__handle:focus-visible {
  outline: var(--xy-focus-outline-default);
  outline-offset: 2px;
}

/* ===================
   邊線標籤樣式
   =================== */

.xy-flow__edge-text {
  pointer-events: none;
  user-select: none;
  font-size: 10px;
  text-anchor: middle;
  dominant-baseline: central;
  fill: var(--xy-node-color-default);
}

.xy-flow__edge-textbg {
  fill: var(--xy-node-background-color-default);
  stroke: var(--xy-node-background-color-default);
  stroke-width: 2;
  paint-order: stroke;
}

/* ===================
   選擇框樣式
   =================== */

.xy-flow__selection {
  /* 選擇框背景 */
  background: var(
    --xy-selection-background-color-props,
    var(--xy-selection-background-color, var(--xy-selection-background-color-default))
  );
  
  /* 選擇框邊框 */
  border: var(
    --xy-selection-border-props,
    var(--xy-selection-border, var(--xy-selection-border-default))
  );
  
  /* Z-index */
  z-index: var(
    --xy-selection-z-index-props,
    var(--xy-selection-z-index, var(--xy-selection-z-index-default))
  );
}

.xy-flow__nodesselection {
  z-index: 2;
  transform-origin: left top;
  pointer-events: none;
  position: absolute;
}

.xy-flow__nodesselection rect {
  fill: var(--xy-selection-background-color-default);
  stroke: var(--xy-selection-border-default);
  stroke-width: 1;
  stroke-dasharray: 3, 3;
}

/* ===================
   面板基礎樣式
   =================== */

.xy-flow__panel {
  position: absolute;
  z-index: 5;
  margin: 15px;
}

.xy-flow__panel.top {
  top: 0;
}

.xy-flow__panel.bottom {
  bottom: 0;
}

.xy-flow__panel.left {
  left: 0;
}

.xy-flow__panel.right {
  right: 0;
}

.xy-flow__panel.center {
  left: 50%;
  transform: translateX(-50%);
}

/* ===================
   禁用平移類名
   =================== */

.nopan {
  pointer-events: none;
}

/* ===================
   輔助功能樣式
   =================== */

.xy-flow__a11y-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

/* ARIA live region */
.xy-flow__aria-live {
  position: absolute;
  left: -10000px;
  width: 1px;
  height: 1px;
  overflow: hidden;
}

/* ===================
   視窗樣式
   =================== */

.xy-flow__viewport {
  width: 100%;
  height: 100%;
  overflow: hidden;
  position: relative;
}

.xy-flow__transformationpane {
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
}

.xy-flow__renderer {
  width: 100%;
  height: 100%;
}

/* ===================
   渲染層樣式
   =================== */

.xy-flow__edges {
  pointer-events: none;
  overflow: visible;
}

.xy-flow__edge {
  pointer-events: visibleStroke;
}

.xy-flow__nodes {
  pointer-events: none;
  transform-origin: 0 0;
}

.xy-flow__node {
  pointer-events: all;
}

/* ===================
   連接線樣式
   =================== */

.xy-flow__connectionline {
  stroke: var(--xy-edge-stroke-default);
  stroke-width: 1;
  fill: none;
  pointer-events: none;
}

/* ===================
   錯誤邊界樣式
   =================== */

.xy-flow__error {
  color: #ff6b6b;
  background: #ffe0e0;
  border: 1px solid #ff6b6b;
  border-radius: 4px;
  padding: 10px;
  margin: 10px;
  font-family: monospace;
}

/* ===================
   調試樣式
   =================== */

.xy-flow.debug .xy-flow__node {
  border: 2px dashed red !important;
}

.xy-flow.debug .xy-flow__handle {
  border: 2px solid blue !important;
}

.xy-flow.debug .xy-flow__edge path {
  stroke: green !important;
  stroke-width: 3px !important;
}