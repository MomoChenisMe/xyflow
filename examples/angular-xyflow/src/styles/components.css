/**
 * Angular XYFlow 組件樣式
 * 
 * 各個組件的具體樣式實現，包括 Controls、MiniMap、Background、NodeToolbar 等
 * 完全兼容 React Flow 的組件樣式
 */

/* ===================
   Controls 控制器樣式
   =================== */

.xy-flow__controls {
  box-shadow: var(
    --xy-controls-box-shadow-props,
    var(--xy-controls-box-shadow, var(--xy-controls-box-shadow-default))
  );
  border-radius: 6px;
  overflow: hidden;
  display: flex;
  flex-direction: column;
  font-size: 12px;
  background: transparent;
  fill: currentColor;
}

.xy-flow__controls-button {
  border: none;
  border-bottom: 1px solid var(
    --xy-controls-button-border-color-props,
    var(--xy-controls-button-border-color, var(--xy-controls-button-border-color-default))
  );
  
  background: var(
    --xy-controls-button-background-color-props,
    var(--xy-controls-button-background-color, var(--xy-controls-button-background-color-default))
  );
  
  color: var(
    --xy-controls-button-color-props,
    var(--xy-controls-button-color, var(--xy-controls-button-color-default))
  );
  
  width: var(
    --xy-controls-button-size-props,
    var(--xy-controls-button-size, var(--xy-controls-button-size-default))
  );
  
  height: var(
    --xy-controls-button-size-props,
    var(--xy-controls-button-size, var(--xy-controls-button-size-default))
  );
  
  cursor: pointer;
  display: flex;
  justify-content: center;
  align-items: center;
  
  transition: background-color var(--xy-transition-duration-default) var(--xy-transition-timing-function-default),
              color var(--xy-transition-duration-default) var(--xy-transition-timing-function-default);
}

.xy-flow__controls-button:hover {
  background: var(
    --xy-controls-button-background-color-hover-props,
    var(--xy-controls-button-background-color-hover, var(--xy-controls-button-background-color-hover-default))
  );
  
  color: var(
    --xy-controls-button-color-hover-props,
    var(--xy-controls-button-color-hover, var(--xy-controls-button-color-hover-default))
  );
}

.xy-flow__controls-button:disabled {
  pointer-events: none;
  opacity: 0.4;
}

.xy-flow__controls-button:last-child {
  border-bottom: none;
}

.xy-flow__controls-button svg {
  width: 100%;
  max-width: 12px;
  max-height: 12px;
}

/* 水平控制器 */
.xy-flow__controls.horizontal {
  flex-direction: row;
}

.xy-flow__controls.horizontal .xy-flow__controls-button {
  border-bottom: none;
  border-right: 1px solid var(--xy-controls-button-border-color-default);
}

.xy-flow__controls.horizontal .xy-flow__controls-button:last-child {
  border-right: none;
}

/* ===================
   MiniMap 小地圖樣式
   =================== */

.xy-flow__minimap {
  background: var(
    --xy-minimap-background-color-props,
    var(--xy-minimap-background-color, var(--xy-minimap-background-color-default))
  );
  
  width: var(
    --xy-minimap-width-props,
    var(--xy-minimap-width, var(--xy-minimap-width-default))
  );
  
  height: var(
    --xy-minimap-height-props,
    var(--xy-minimap-height, var(--xy-minimap-height-default))
  );
  
  border-radius: 4px;
  overflow: hidden;
  position: relative;
  
  /* Z-index */
  z-index: var(
    --xy-minimap-z-index-props,
    var(--xy-minimap-z-index, var(--xy-minimap-z-index-default))
  );
}

.xy-flow__minimap svg {
  width: 100%;
  height: 100%;
  display: block;
}

/* 小地圖節點 */
.xy-flow__minimap-node {
  fill: var(
    --xy-minimap-node-background-color-props,
    var(--xy-minimap-node-background-color, var(--xy-minimap-node-background-color-default))
  );
  
  stroke: var(
    --xy-minimap-node-stroke-color-props,
    var(--xy-minimap-node-stroke-color, var(--xy-minimap-node-stroke-color-default))
  );
  
  stroke-width: var(
    --xy-minimap-node-stroke-width-props,
    var(--xy-minimap-node-stroke-width, var(--xy-minimap-node-stroke-width-default))
  );
}

/* 小地圖蒙版 */
.xy-flow__minimap-mask {
  fill: var(
    --xy-minimap-mask-background-color-props,
    var(--xy-minimap-mask-background-color, var(--xy-minimap-mask-background-color-default))
  );
  
  stroke: var(
    --xy-minimap-mask-stroke-color-props,
    var(--xy-minimap-mask-stroke-color, var(--xy-minimap-mask-stroke-color-default))
  );
  
  stroke-width: var(
    --xy-minimap-mask-stroke-width-props,
    var(--xy-minimap-mask-stroke-width, var(--xy-minimap-mask-stroke-width-default))
  );
  
  cursor: pointer;
}

/* 小地圖可交互區域 */
.xy-flow__minimap-interaction {
  cursor: grab;
}

.xy-flow__minimap-interaction:active {
  cursor: grabbing;
}

/* ===================
   Background 背景樣式
   =================== */

.xy-flow__background {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: -1;
}

/* 點狀背景 */
.xy-flow__background.dots {
  background-image: radial-gradient(
    circle,
    var(
      --xy-background-pattern-color-props,
      var(--xy-background-pattern-color, var(--xy-background-pattern-color-default))
    ) 1px,
    transparent 1px
  );
}

/* 線條背景 */
.xy-flow__background.lines {
  background-image: 
    linear-gradient(
      var(
        --xy-background-pattern-color-props,
        var(--xy-background-pattern-color, var(--xy-background-pattern-color-default))
      ) 1px,
      transparent 1px
    ),
    linear-gradient(
      90deg,
      var(
        --xy-background-pattern-color-props,
        var(--xy-background-pattern-color, var(--xy-background-pattern-color-default))
      ) 1px,
      transparent 1px
    );
}

/* 交叉線背景 */
.xy-flow__background.cross {
  background-image: 
    linear-gradient(
      var(
        --xy-background-pattern-color-props,
        var(--xy-background-pattern-color, var(--xy-background-pattern-color-default))
      ) 1px,
      transparent 1px
    ),
    linear-gradient(
      90deg,
      var(
        --xy-background-pattern-color-props,
        var(--xy-background-pattern-color, var(--xy-background-pattern-color-default))
      ) 1px,
      transparent 1px
    );
  background-size: var(--gap, 20px) var(--gap, 20px);
}

/* ===================
   NodeToolbar 節點工具欄樣式
   =================== */

.xy-flow__node-toolbar {
  position: absolute;
  font-size: 12px;
  background: var(--xy-controls-button-background-color-default);
  border-radius: 4px;
  box-shadow: var(--xy-controls-box-shadow-default);
  border: 1px solid var(--xy-controls-button-border-color-default);
  padding: 4px;
  display: flex;
  gap: var(--xy-controls-button-spacing-default);
  pointer-events: all;
  z-index: 10;
}

.xy-flow__node-toolbar button {
  border: none;
  background: transparent;
  color: var(--xy-controls-button-color-default);
  padding: 4px 8px;
  border-radius: 2px;
  cursor: pointer;
  font-size: 12px;
  
  transition: background-color var(--xy-transition-duration-default) var(--xy-transition-timing-function-default);
}

.xy-flow__node-toolbar button:hover {
  background: var(--xy-controls-button-background-color-hover-default);
}

.xy-flow__node-toolbar button:disabled {
  opacity: 0.4;
  cursor: not-allowed;
}

/* 工具欄位置 */
.xy-flow__node-toolbar.top {
  bottom: 100%;
  margin-bottom: 5px;
}

.xy-flow__node-toolbar.bottom {
  top: 100%;
  margin-top: 5px;
}

.xy-flow__node-toolbar.left {
  right: 100%;
  margin-right: 5px;
}

.xy-flow__node-toolbar.right {
  left: 100%;
  margin-left: 5px;
}

/* ===================
   NodeResizer 節點調整器樣式
   =================== */

.xy-flow__resize-control {
  position: absolute;
  cursor: nwse-resize;
  background: var(
    --xy-resize-handle-background-color-props,
    var(--xy-resize-handle-background-color, var(--xy-resize-handle-background-color-default))
  );
  
  color: var(
    --xy-resize-handle-color-props,
    var(--xy-resize-handle-color, var(--xy-resize-handle-color-default))
  );
  
  width: 10px;
  height: 10px;
  border-radius: 1px;
  border: none;
  transform: translate(-50%, -50%);
  
  transition: all var(--xy-transition-duration-default) var(--xy-transition-timing-function-default);
}

.xy-flow__resize-control:hover {
  transform: translate(-50%, -50%) scale(1.1);
}

/* 調整器位置 */
.xy-flow__resize-control.top {
  top: 0;
  left: 50%;
  cursor: ns-resize;
}

.xy-flow__resize-control.bottom {
  bottom: 0;
  left: 50%;
  cursor: ns-resize;
}

.xy-flow__resize-control.left {
  top: 50%;
  left: 0;
  cursor: ew-resize;
}

.xy-flow__resize-control.right {
  top: 50%;
  right: 0;
  cursor: ew-resize;
}

.xy-flow__resize-control.top-left {
  top: 0;
  left: 0;
  cursor: nw-resize;
}

.xy-flow__resize-control.top-right {
  top: 0;
  right: 0;
  cursor: ne-resize;
}

.xy-flow__resize-control.bottom-left {
  bottom: 0;
  left: 0;
  cursor: sw-resize;
}

.xy-flow__resize-control.bottom-right {
  bottom: 0;
  right: 0;
  cursor: se-resize;
}

/* 調整線條 */
.xy-flow__resize-line {
  border-color: var(
    --xy-resize-line-color-props,
    var(--xy-resize-line-color, var(--xy-resize-line-color-default))
  );
  border-style: dashed;
  border-width: 1px;
  position: absolute;
  pointer-events: none;
}

/* ===================
   Attribution 歸屬樣式
   =================== */

.xy-flow__attribution {
  background: var(
    --xy-attribution-background-color-props,
    var(--xy-attribution-background-color, var(--xy-attribution-background-color-default))
  );
  
  color: var(
    --xy-attribution-color-props,
    var(--xy-attribution-color, var(--xy-attribution-color-default))
  );
  
  font-size: 10px;
  padding: 2px 3px;
  margin: 0;
  border-radius: 2px;
}

.xy-flow__attribution a {
  color: inherit;
  text-decoration: none;
}

.xy-flow__attribution a:hover {
  text-decoration: underline;
}

/* ===================
   特殊功能樣式
   =================== */

/* 拖拽中的邊線 */
.xy-flow__connection-line {
  stroke: var(--xy-edge-stroke-default);
  stroke-width: 1;
  fill: none;
  pointer-events: none;
}

/* 連接指示器 */
.xy-flow__connection-indicator {
  fill: var(--xy-handle-background-color-default);
  stroke: var(--xy-handle-border-color-default);
  stroke-width: 1;
}

/* 節點選擇指示器 */
.xy-flow__node-selection-indicator {
  position: absolute;
  top: -2px;
  left: -2px;
  right: -2px;
  bottom: -2px;
  border: 2px solid var(--xy-edge-stroke-selected-default);
  border-radius: inherit;
  pointer-events: none;
  z-index: -1;
}

/* 邊線選擇指示器 */
.xy-flow__edge-selection-indicator {
  stroke: var(--xy-edge-stroke-selected-default);
  stroke-width: 6;
  fill: none;
  pointer-events: none;
  opacity: 0.3;
}

/* ===================
   動畫和過渡效果
   =================== */

/* 節點添加動畫 */
@keyframes node-appear {
  from {
    opacity: 0;
    transform: scale(0.8);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

.xy-flow__node.appearing {
  animation: node-appear 0.2s ease-out;
}

/* 邊線添加動畫 */
@keyframes edge-appear {
  from {
    stroke-dasharray: 1000;
    stroke-dashoffset: 1000;
  }
  to {
    stroke-dasharray: 1000;
    stroke-dashoffset: 0;
  }
}

.xy-flow__edge.appearing path {
  animation: edge-appear 0.5s ease-out;
}

/* 控制器按鈕脈衝動畫 */
@keyframes pulse {
  0%, 100% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.05);
  }
}

.xy-flow__controls-button.active {
  animation: pulse 1s infinite;
}

/* ===================
   響應式調整
   =================== */

@media (max-width: 768px) {
  .xy-flow__controls {
    font-size: 14px;
  }
  
  .xy-flow__minimap {
    width: 150px;
    height: 100px;
  }
  
  .xy-flow__node-toolbar {
    font-size: 14px;
    padding: 6px;
  }
}

@media (max-width: 480px) {
  .xy-flow__controls-button {
    width: 36px;
    height: 36px;
  }
  
  .xy-flow__minimap {
    width: 120px;
    height: 80px;
  }
  
  .xy-flow__resize-control {
    width: 12px;
    height: 12px;
  }
}

/* ===================
   主題特定樣式
   =================== */

.xy-flow.dark .xy-flow__minimap {
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);
}

.xy-flow.dark .xy-flow__controls {
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);
}

.xy-flow.dark .xy-flow__node-toolbar {
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);
}

/* ===================
   高對比度調整
   =================== */

@media (prefers-contrast: high) {
  .xy-flow__controls-button {
    border: 2px solid currentColor;
  }
  
  .xy-flow__resize-control {
    border: 2px solid currentColor;
  }
  
  .xy-flow__minimap {
    border: 2px solid currentColor;
  }
}