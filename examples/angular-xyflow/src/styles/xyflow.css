/**
 * Angular XYFlow 完整樣式系統
 * 
 * 基於 @xyflow/system 和 @xyflow/react 的樣式，完全適配 Angular
 * 支援亮色/暗色主題、響應式設計、CSS 變量系統
 */

/* 導入核心樣式 */
@import './variables.css';
@import './base.css';
@import './components.css';

/* ===== 主容器樣式 - 兼容性調整 ===== */
.react-flow, .xy-flow {
  direction: ltr;
  
  /* 基本繼承自 variables.css 的變量 */
  --xy-edge-stroke-default: #b1b1b7;
  --xy-edge-stroke-width-default: 1;
  --xy-edge-stroke-selected-default: #555;

  --xy-connectionline-stroke-default: #b1b1b7;
  --xy-connectionline-stroke-width-default: 1;

  --xy-attribution-background-color-default: rgba(255, 255, 255, 0.5);

  --xy-minimap-background-color-default: #fff;
  --xy-minimap-mask-background-color-default: rgba(240, 240, 240, 0.6);
  --xy-minimap-mask-stroke-color-default: transparent;
  --xy-minimap-mask-stroke-width-default: 1;
  --xy-minimap-node-background-color-default: #e2e2e2;
  --xy-minimap-node-stroke-color-default: transparent;
  --xy-minimap-node-stroke-width-default: 2;

  --xy-background-color-default: transparent;
  --xy-background-pattern-dots-color-default: #91919a;
  --xy-background-pattern-lines-color-default: #eee;
  --xy-background-pattern-cross-color-default: #e2e2e2;

  --xy-node-color-default: inherit;
  --xy-node-border-default: 1px solid #1a192b;
  --xy-node-background-color-default: #fff;
  --xy-node-group-background-color-default: rgba(240, 240, 240, 0.25);
  --xy-node-boxshadow-hover-default: 0 1px 4px 1px rgba(0, 0, 0, 0.08);
  --xy-node-boxshadow-selected-default: 0 0 0 0.5px #1a192b;
  --xy-node-border-radius-default: 3px;

  --xy-handle-background-color-default: #1a192b;
  --xy-handle-border-color-default: #fff;

  --xy-selection-background-color-default: rgba(0, 89, 220, 0.08);
  --xy-selection-border-default: 1px dotted rgba(0, 89, 220, 0.8);

  --xy-controls-button-background-color-default: #fefefe;
  --xy-controls-button-background-color-hover-default: #f4f4f4;
  --xy-controls-button-color-default: inherit;
  --xy-controls-button-color-hover-default: inherit;
  --xy-controls-button-border-color-default: #eee;
  --xy-controls-box-shadow-default: 0 0 2px 1px rgba(0, 0, 0, 0.08);

  --xy-edge-label-background-color-default: #ffffff;
  --xy-edge-label-color-default: inherit;
}

.react-flow.dark, .xy-flow.dark {
  --xy-edge-stroke-default: #3e3e3e;
  --xy-edge-stroke-width-default: 1;
  --xy-edge-stroke-selected-default: #727272;

  --xy-connectionline-stroke-default: #b1b1b7;
  --xy-connectionline-stroke-width-default: 1;

  --xy-attribution-background-color-default: rgba(150, 150, 150, 0.25);

  --xy-minimap-background-color-default: #141414;
  --xy-minimap-mask-background-color-default: rgba(60, 60, 60, 0.6);
  --xy-minimap-mask-stroke-color-default: transparent;
  --xy-minimap-mask-stroke-width-default: 1;
  --xy-minimap-node-background-color-default: #2b2b2b;
  --xy-minimap-node-stroke-color-default: transparent;
  --xy-minimap-node-stroke-width-default: 2;

  --xy-background-color-default: #141414;
  --xy-background-pattern-dots-color-default: #777;
  --xy-background-pattern-lines-color-default: #777;
  --xy-background-pattern-cross-color-default: #777;

  --xy-node-color-default: #f8f8f8;
  --xy-node-border-default: 1px solid #3c3c3c;
  --xy-node-background-color-default: #1e1e1e;
  --xy-node-group-background-color-default: rgba(240, 240, 240, 0.25);
  --xy-node-boxshadow-hover-default: 0 1px 4px 1px rgba(255, 255, 255, 0.08);
  --xy-node-boxshadow-selected-default: 0 0 0 0.5px #999;

  --xy-handle-background-color-default: #bebebe;
  --xy-handle-border-color-default: #1e1e1e;

  --xy-selection-background-color-default: rgba(200, 200, 220, 0.08);
  --xy-selection-border-default: 1px dotted rgba(200, 200, 220, 0.8);

  --xy-controls-button-background-color-default: #2b2b2b;
  --xy-controls-button-background-color-hover-default: #3e3e3e;
  --xy-controls-button-color-default: #f8f8f8;
  --xy-controls-button-color-hover-default: #fff;
  --xy-controls-button-border-color-default: #5b5b5b;
  --xy-controls-box-shadow-default: 0 0 2px 1px rgba(0, 0, 0, 0.08);

  --xy-edge-label-background-color-default: #141414;
  --xy-edge-label-color-default: #f8f8f8;
}

/* ===== MAIN FLOW CONTAINER ===== */
.react-flow,
.xy-flow {
  background-color: var(--xy-background-color, var(--xy-background-color-default));
  width: 100%;
  height: 100%;
  position: relative;
  /* overflow: hidden; <- 移除，遵循 React Flow 原始設計 */
  z-index: 0;
  user-select: none;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
  
  /* 確保觸控設備上的良好體驗 */
  touch-action: none;
}

/* 與React Flow完全兼容的類名別名 */
.react-flow {
  /* 所有 react-flow__ 類名都應該與 xy-flow__ 類名完全相同 */
}

.react-flow__background,
.xy-flow__background {
  background-color: var(--xy-background-color-props, var(--xy-background-color, var(--xy-background-color-default)));
  pointer-events: none;
  z-index: -1;
}

.react-flow__container {
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
}

.react-flow__pane {
  z-index: 1;
}

.react-flow__pane.draggable {
  cursor: grab;
}

.react-flow__pane.dragging {
  cursor: grabbing;
}

.react-flow__pane.selection {
  cursor: pointer;
}

.react-flow__viewport {
  transform-origin: 0 0;
  z-index: 2;
  pointer-events: none;
  width: 100%;
  height: 100%;
}

.react-flow__renderer {
  z-index: 4;
}

.react-flow__selection {
  z-index: 6;
}

.react-flow__nodesselection-rect:focus,
.react-flow__nodesselection-rect:focus-visible {
  outline: none;
}

/* ===== EDGES ===== */
.react-flow__edge-path {
  stroke: var(--xy-edge-stroke, var(--xy-edge-stroke-default));
  stroke-width: var(--xy-edge-stroke-width, var(--xy-edge-stroke-width-default));
  fill: none;
}

.react-flow__connection-path {
  stroke: var(--xy-connectionline-stroke, var(--xy-connectionline-stroke-default));
  stroke-width: var(--xy-connectionline-stroke-width, var(--xy-connectionline-stroke-width-default));
  fill: none;
}

.react-flow .react-flow__edges {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: 3;
}

.react-flow .react-flow__edges svg {
  overflow: visible;
  position: absolute;
  pointer-events: none;
}

.react-flow__edge {
  pointer-events: visibleStroke;
}

.react-flow__edge.selectable {
  cursor: pointer;
}

.react-flow__edge.animated path {
  stroke-dasharray: 5;
  animation: dashdraw 0.5s linear infinite;
}

.react-flow__edge.animated path.react-flow__edge-interaction {
  stroke-dasharray: none;
  animation: none;
}

.react-flow__edge.inactive {
  pointer-events: none;
}

.react-flow__edge.selected,
.react-flow__edge:focus,
.react-flow__edge:focus-visible {
  outline: none;
}

.react-flow__edge.selected .react-flow__edge-path,
.react-flow__edge.selectable:focus .react-flow__edge-path,
.react-flow__edge.selectable:focus-visible .react-flow__edge-path {
  stroke: var(--xy-edge-stroke-selected, var(--xy-edge-stroke-selected-default));
}

.react-flow__edge-textwrapper {
  pointer-events: all;
}

.react-flow__edge .react-flow__edge-text {
  pointer-events: none;
  user-select: none;
}

.react-flow__edge.updating .react-flow__edge-path {
  stroke: #777;
}

.react-flow__edge-text {
  font-size: 10px;
}

.react-flow__edge-textbg {
  fill: var(--xy-edge-label-background-color, var(--xy-edge-label-background-color-default));
}

.react-flow__edge-text {
  fill: var(--xy-edge-label-color, var(--xy-edge-label-color-default));
}

.react-flow__connection {
  pointer-events: none;
}

.react-flow__connection .animated {
  stroke-dasharray: 5;
  animation: dashdraw 0.5s linear infinite;
}

svg.react-flow__connectionline {
  z-index: 1001;
  overflow: visible;
  position: absolute;
}

/* ===== NODES ===== */
.react-flow__nodes,
.xy-flow__nodes {
  pointer-events: none;
  transform-origin: 0 0;
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  left: 0;
}

.react-flow__node,
.xy-flow__node {
  position: absolute;
  user-select: none;
  pointer-events: all;
  transform-origin: 0 0;
  box-sizing: border-box;
  cursor: default;
  
  /* 確保節點可以被點擊和拖動 */
  touch-action: none;
}

.react-flow__node.selectable,
.xy-flow__node.selectable {
  cursor: pointer;
}

.react-flow__node.selectable:hover,
.xy-flow__node.selectable:hover {
  box-shadow: var(--xy-node-boxshadow-hover, var(--xy-node-boxshadow-hover-default));
}

.react-flow__node.draggable,
.xy-flow__node.draggable {
  cursor: grab;
  pointer-events: all;
  touch-action: none;
}

.react-flow__node.draggable.dragging,
.xy-flow__node.draggable.dragging {
  cursor: grabbing;
  z-index: 1000;
}

.react-flow__node.selectable:focus,
.react-flow__node.selectable:focus-visible {
  outline: none;
}

.react-flow__node-input,
.react-flow__node-default,
.react-flow__node-output,
.react-flow__node-group {
  padding: 10px;
  border-radius: var(--xy-node-border-radius, var(--xy-node-border-radius-default));
  width: 150px;
  font-size: 12px;
  color: var(--xy-node-color, var(--xy-node-color-default));
  text-align: center;
  border: var(--xy-node-border, var(--xy-node-border-default));
  background-color: var(--xy-node-background-color, var(--xy-node-background-color-default));
}

.react-flow__node-input.selectable:hover,
.react-flow__node-default.selectable:hover,
.react-flow__node-output.selectable:hover,
.react-flow__node-group.selectable:hover {
  box-shadow: var(--xy-node-boxshadow-hover, var(--xy-node-boxshadow-hover-default));
}

.react-flow__node-input.selectable.selected,
.react-flow__node-input.selectable:focus,
.react-flow__node-input.selectable:focus-visible,
.react-flow__node-default.selectable.selected,
.react-flow__node-default.selectable:focus,
.react-flow__node-default.selectable:focus-visible,
.react-flow__node-output.selectable.selected,
.react-flow__node-output.selectable:focus,
.react-flow__node-output.selectable:focus-visible,
.react-flow__node-group.selectable.selected,
.react-flow__node-group.selectable:focus,
.react-flow__node-group.selectable:focus-visible {
  box-shadow: var(--xy-node-boxshadow-selected, var(--xy-node-boxshadow-selected-default));
}

.react-flow__node-group {
  background-color: var(--xy-node-group-background-color, var(--xy-node-group-background-color-default));
}

.react-flow__nodesselection {
  z-index: 3;
  transform-origin: left top;
  pointer-events: none;
}

.react-flow__nodesselection-rect {
  position: absolute;
  pointer-events: all;
  cursor: grab;
}

.react-flow__nodesselection-rect,
.react-flow__selection {
  background: var(--xy-selection-background-color, var(--xy-selection-background-color-default));
  border: var(--xy-selection-border, var(--xy-selection-border-default));
}

.react-flow__nodesselection-rect:focus,
.react-flow__nodesselection-rect:focus-visible,
.react-flow__selection:focus,
.react-flow__selection:focus-visible {
  outline: none;
}

/* ===== HANDLES ===== */
.react-flow__handle,
.xy-flow__handle {
  position: absolute;
  pointer-events: none;
  min-width: 5px;
  min-height: 5px;
  width: 8px;
  height: 8px;
  background-color: var(--xy-handle-background-color, var(--xy-handle-background-color-default));
  border: 2px solid var(--xy-handle-border-color, var(--xy-handle-border-color-default));
  border-radius: 100%;
  z-index: 10;
  
  /* Ensure handles are visible */
  opacity: 1;
  transition: all 0.2s ease;
}

.react-flow__handle.connectingfrom,
.xy-flow__handle.connectingfrom {
  pointer-events: all;
}

.react-flow__handle.connectionindicator,
.xy-flow__handle.connectionindicator {
  pointer-events: all;
  cursor: crosshair;
}

/* Enable pointer events for all connectable handles */
.react-flow__handle.connectable,
.xy-flow__handle.connectable {
  pointer-events: all;
  cursor: crosshair;
  touch-action: none;
}

/* Handle hover effects */
.react-flow__handle.connectable:hover,
.xy-flow__handle.connectable:hover {
  transform: scale(1.1);
  background-color: #ff6060;
  border-color: #ff6060;
  transition: all 0.2s ease;
}

.react-flow__handle-bottom,
.xy-flow__handle-bottom {
  top: auto;
  left: 50%;
  bottom: 0;
  transform: translate(-50%, 50%);
}

.react-flow__handle-top,
.xy-flow__handle-top {
  top: 0;
  left: 50%;
  transform: translate(-50%, -50%);
}

.react-flow__handle-left,
.xy-flow__handle-left {
  top: 50%;
  left: 0;
  transform: translate(-50%, -50%);
}

.react-flow__handle-right,
.xy-flow__handle-right {
  top: 50%;
  right: 0;
  transform: translate(50%, -50%);
}

.react-flow__edgeupdater {
  cursor: move;
  pointer-events: all;
}

/* ===== PANELS ===== */
.react-flow__pane.selection .react-flow__panel {
  pointer-events: none;
}

.react-flow__panel,
.xy-flow__panel {
  position: absolute;
  z-index: 5;
  margin: 15px;
}

.react-flow__panel.top,
.xy-flow__panel.top {
  top: 0;
}

.react-flow__panel.bottom,
.xy-flow__panel.bottom {
  bottom: 0;
}

.react-flow__panel.top.center,
.react-flow__panel.bottom.center,
.xy-flow__panel.top.center,
.xy-flow__panel.bottom.center {
  left: 50%;
  transform: translateX(-15px) translateX(-50%);
}

.react-flow__panel.left,
.xy-flow__panel.left {
  left: 0;
}

.react-flow__panel.right,
.xy-flow__panel.right {
  right: 0;
}

.react-flow__panel.left.center,
.react-flow__panel.right.center,
.xy-flow__panel.left.center,
.xy-flow__panel.right.center {
  top: 50%;
  transform: translateY(-15px) translateY(-50%);
}

.react-flow__attribution {
  font-size: 10px;
  background: var(--xy-attribution-background-color, var(--xy-attribution-background-color-default));
  padding: 2px 3px;
  margin: 0;
}

.react-flow__attribution a {
  text-decoration: none;
  color: #999;
}

/* ===== EDGE LABEL RENDERER ===== */
.react-flow__edgelabel-renderer {
  position: absolute;
  width: 100%;
  height: 100%;
  pointer-events: none;
  user-select: none;
  left: 0;
  top: 0;
}

.react-flow__viewport-portal {
  position: absolute;
  width: 100%;
  height: 100%;
  left: 0;
  top: 0;
  user-select: none;
}

/* ===== MINIMAP ===== */
.react-flow__minimap {
  background: var(
    --xy-minimap-background-color-props,
    var(--xy-minimap-background-color, var(--xy-minimap-background-color-default))
  );
}

.react-flow__minimap-svg {
  display: block;
}

.react-flow__minimap-mask {
  fill: var(
    --xy-minimap-mask-background-color-props,
    var(--xy-minimap-mask-background-color, var(--xy-minimap-mask-background-color-default))
  );
  stroke: var(
    --xy-minimap-mask-stroke-color-props,
    var(--xy-minimap-mask-stroke-color, var(--xy-minimap-mask-stroke-color-default))
  );
  stroke-width: var(
    --xy-minimap-mask-stroke-width-props,
    var(--xy-minimap-mask-stroke-width, var(--xy-minimap-mask-stroke-width-default))
  );
}

.react-flow__minimap-node {
  fill: var(
    --xy-minimap-node-background-color-props,
    var(--xy-minimap-node-background-color, var(--xy-minimap-node-background-color-default))
  );
  stroke: var(
    --xy-minimap-node-stroke-color-props,
    var(--xy-minimap-node-stroke-color, var(--xy-minimap-node-stroke-color-default))
  );
  stroke-width: var(
    --xy-minimap-node-stroke-width-props,
    var(--xy-minimap-node-stroke-width, var(--xy-minimap-node-stroke-width-default))
  );
}

/* ===== BACKGROUND PATTERNS ===== */
.react-flow__background-pattern.dots {
  fill: var(
    --xy-background-pattern-color-props,
    var(--xy-background-pattern-color, var(--xy-background-pattern-dots-color-default))
  );
}

.react-flow__background-pattern.lines {
  stroke: var(
    --xy-background-pattern-color-props,
    var(--xy-background-pattern-color, var(--xy-background-pattern-lines-color-default))
  );
}

.react-flow__background-pattern.cross {
  stroke: var(
    --xy-background-pattern-color-props,
    var(--xy-background-pattern-color, var(--xy-background-pattern-cross-color-default))
  );
}

/* ===== CONTROLS ===== */
.react-flow__controls,
.xy-flow__controls {
  display: flex;
  flex-direction: column;
  box-shadow: var(--xy-controls-box-shadow, var(--xy-controls-box-shadow-default));
}

.react-flow__controls.horizontal {
  flex-direction: row;
}

.react-flow__controls-button,
.xy-flow__controls-button {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 26px;
  width: 26px;
  padding: 4px;
  border: none;
  background: var(--xy-controls-button-background-color, var(--xy-controls-button-background-color-default));
  border-bottom: 1px solid
    var(
      --xy-controls-button-border-color-props,
      var(--xy-controls-button-border-color, var(--xy-controls-button-border-color-default))
    );
  color: var(
    --xy-controls-button-color-props,
    var(--xy-controls-button-color, var(--xy-controls-button-color-default))
  );
  cursor: pointer;
  user-select: none;
}

.react-flow__controls-button:hover {
  background: var(
    --xy-controls-button-background-color-hover-props,
    var(--xy-controls-button-background-color-hover, var(--xy-controls-button-background-color-hover-default))
  );
  color: var(
    --xy-controls-button-color-hover-props,
    var(--xy-controls-button-color-hover, var(--xy-controls-button-color-hover-default))
  );
}

.react-flow__controls-button:disabled {
  pointer-events: none;
}

.react-flow__controls-button:disabled svg {
  fill-opacity: 0.4;
}

.react-flow__controls-button svg {
  width: 100%;
  max-width: 12px;
  max-height: 12px;
  fill: currentColor;
}

.react-flow__controls-button:last-child {
  border-bottom: none;
}

.react-flow__controls.horizontal .react-flow__controls-button {
  border-bottom: none;
  border-right: 1px solid
    var(
      --xy-controls-button-border-color-props,
      var(--xy-controls-button-border-color, var(--xy-controls-button-border-color-default))
    );
}

.react-flow__controls.horizontal .react-flow__controls-button:last-child {
  border-right: none;
}

/* ===== ANIMATIONS ===== */
@keyframes dashdraw {
  from {
    stroke-dashoffset: 10;
  }
}

/* ===== ANGULAR 特定調整 ===== */

/* Angular 組件宿主樣式 */
:host {
  display: block;
  width: 100%;
  height: 100%;
}

/* Angular 類名兼容性 */

/* Angular 範例特殊樣式 */
.xy-flow-basic-example {
  /* 基本範例容器樣式 */
  width: 100%;
  height: 100vh;
  position: relative;
}

.xy-flow-example-container {
  /* 範例容器樣式 */
  display: flex;
  flex-direction: column;
  height: 100%;
}

.xy-flow-example-header {
  /* 範例標題樣式 */
  padding: 10px;
  background: var(--xy-controls-button-background-color-default);
  border-bottom: 1px solid var(--xy-controls-button-border-color-default);
  font-size: 14px;
  font-weight: 600;
}

.xy-flow-example-content {
  /* 範例內容區域 */
  flex: 1;
  position: relative;
}

/* 控制面板按鈕樣式 */
.react-flow__panel button {
  margin: 2px;
  padding: 5px 10px;
  border: 1px solid var(--xy-controls-button-border-color-default);
  background: var(--xy-controls-button-background-color-default);
  color: var(--xy-controls-button-color-default);
  border-radius: 3px;
  cursor: pointer;
  font-size: 11px;
  display: block;
  width: 100%;
  text-align: left;
  
  transition: background-color var(--xy-transition-duration-default) var(--xy-transition-timing-function-default),
              color var(--xy-transition-duration-default) var(--xy-transition-timing-function-default);
}

.react-flow__panel button:hover {
  background: var(--xy-controls-button-background-color-hover-default);
  color: var(--xy-controls-button-color-hover-default);
}

.react-flow__panel button:disabled {
  opacity: 0.4;
  cursor: not-allowed;
}

/* 節點主題樣式 */
.react-flow__node.light {
  background: var(--xy-node-background-color-default);
  color: var(--xy-node-color-default);
}

.react-flow__node.dark {
  background: #557;
  color: #f8f8f8;
  border-color: #669;
}

/* 輔助功能樣式 */
.react-flow__node:focus,
.react-flow__node:focus-visible {
  outline: var(--xy-focus-outline-default);
  outline-offset: 2px;
}

.react-flow__edge:focus,
.react-flow__edge:focus-visible {
  outline: var(--xy-focus-outline-default);
  outline-offset: 2px;
}

.react-flow__handle:focus,
.react-flow__handle:focus-visible {
  outline: var(--xy-focus-outline-default);
  outline-offset: 1px;
}

/* 動畫增強 */
.xy-flow__node.appearing {
  animation: node-appear 0.2s ease-out;
}

.xy-flow__edge.appearing {
  animation: edge-appear 0.5s ease-out;
}

/* 表單控件樣式 */
.xy-flow__form-control {
  margin: 5px 0;
}

.xy-flow__form-control label {
  display: block;
  font-size: 12px;
  font-weight: 500;
  margin-bottom: 2px;
  color: var(--xy-node-color-default);
}

.xy-flow__form-control input,
.xy-flow__form-control select,
.xy-flow__form-control textarea {
  width: 100%;
  padding: 4px 6px;
  border: 1px solid var(--xy-controls-button-border-color-default);
  border-radius: 3px;
  background: var(--xy-controls-button-background-color-default);
  color: var(--xy-controls-button-color-default);
  font-size: 12px;
}

.xy-flow__form-control input:focus,
.xy-flow__form-control select:focus,
.xy-flow__form-control textarea:focus {
  outline: var(--xy-focus-outline-default);
  outline-offset: 1px;
}

/* 載入狀態樣式 */
.xy-flow__loading {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  background: var(--xy-controls-button-background-color-default);
  padding: 20px;
  border-radius: 8px;
  box-shadow: var(--xy-controls-box-shadow-default);
  text-align: center;
  z-index: 1000;
}

.xy-flow__loading-spinner {
  width: 24px;
  height: 24px;
  border: 3px solid var(--xy-controls-button-border-color-default);
  border-top: 3px solid var(--xy-handle-background-color-default);
  border-radius: 50%;
  animation: spin 1s linear infinite;
  margin: 0 auto 10px;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

/* 錯誤狀態樣式 */
.xy-flow__error {
  color: #dc3545;
  background: rgba(220, 53, 69, 0.1);
  border: 1px solid rgba(220, 53, 69, 0.3);
  border-radius: 4px;
  padding: 10px;
  margin: 10px;
  font-size: 12px;
}

.xy-flow__error-title {
  font-weight: 600;
  margin-bottom: 5px;
}

/* 響應式調整 */
@media (max-width: 768px) {
  .react-flow__panel {
    margin: 10px;
  }
  
  .react-flow__controls-button {
    width: 32px;
    height: 32px;
  }
  
  .xy-flow-example-header {
    padding: 8px;
    font-size: 13px;
  }
  
  .xy-flow__form-control input,
  .xy-flow__form-control select,
  .xy-flow__form-control textarea {
    padding: 6px 8px;
    font-size: 14px;
  }
}

@media (max-width: 480px) {
  .react-flow__controls-button {
    width: 36px;
    height: 36px;
  }
  
  .react-flow__panel button {
    padding: 8px 12px;
    font-size: 12px;
  }
}

/* 高對比度模式 */
@media (prefers-contrast: high) {
  .react-flow__node {
    border-width: 2px;
  }
  
  .react-flow__edge path {
    stroke-width: 2;
  }
  
  .react-flow__handle {
    border-width: 2px;
  }
}

/* 減少動畫模式 */
@media (prefers-reduced-motion: reduce) {
  .xy-flow__node.appearing,
  .xy-flow__edge.appearing {
    animation: none;
  }
  
  .xy-flow__loading-spinner {
    animation: none;
    border-top-color: transparent;
  }
}