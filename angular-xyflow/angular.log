❯ Building...
✔ Building...
Initial chunk files | Names         |  Raw size
main.js             | main          | 156.07 kB | 
styles.css          | styles        |  17.33 kB | 

                    | Initial total | 173.40 kB

Application bundle generation complete. [1.488 seconds]

[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:65:41:
[37m      65 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:70:41:
[37m      70 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:75:41:
[37m      75 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-textwrapper" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:159:3:
[37m      159 │   &[32m-textwrapper[37m {
          │    [32m~~~~~~~~~~~~[37m
          ╵    [32m:is(-textwrapper)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-rect" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:215:3:
[37m      215 │   &[32m-rect[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-rect)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-bottom" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:237:3:
[37m      237 │   &[32m-bottom[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-bottom)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-top" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:244:3:
[37m      244 │   &[32m-top[37m {
          │    [32m~~~~[37m
          ╵    [32m:is(-top)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-left" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:250:3:
[37m      250 │   &[32m-left[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-left)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-right" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:256:3:
[37m      256 │   &[32m-right[37m {
          │    [32m~~~~~~[37m
          ╵    [32m:is(-right)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-svg" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:353:3:
[37m      353 │   &[32m-svg[37m {
          │    [32m~~~~[37m
          ╵    [32m:is(-svg)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-mask" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:357:3:
[37m      357 │   &[32m-mask[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-mask)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-node" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:372:3:
[37m      372 │   &[32m-node[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-node)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:424:3:
[37m      424 │   &[32m-button[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-button)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-text" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:59:3:
[37m      59 │   &[32m-text[37m {
         │    [32m~~~~~[37m
         ╵    [32m:is(-text)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:123:3:
[37m      123 │   &[32m-button[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-button)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:158:3:
[37m      158 │   &[32m-button:last-child[37m {
          │    [32m~~~~~~~~~~~~~~~~~~[37m
          ╵    [32m:is(-button:last-child)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:162:15:
[37m      162 │   &.horizontal [32m&-button[37m {
          │                [32m~~~~~~~~[37m
          ╵                [32m-button&[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can move the "&" to the end of this selector as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:171:15:
[37m      171 │   &.horizontal [32m&-button:last-child[37m {
          │                [32m~~~~~~~~~~~~~~~~~~~[37m
          ╵                [32m-button:last-child&[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can move the "&" to the end of this selector as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


Watch mode enabled. Watching for file changes...
NOTE: Raw file sizes do not reflect development server per-request transformations.
下午11:00:11 [vite] (ssr) Re-optimizing dependencies because lockfile has changed
下午11:00:11 [vite] (client) Re-optimizing dependencies because lockfile has changed
  ➜  Local:   http://localhost:4200/
❯ Changes detected. Rebuilding...
✔ Changes detected. Rebuilding...
Initial chunk files | Names |  Raw size
main.js             | main  | 157.38 kB | 

Application bundle generation complete. [0.765 seconds]

[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-textwrapper" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:159:3:
[37m      159 │   &[32m-textwrapper[37m {
          │    [32m~~~~~~~~~~~~[37m
          ╵    [32m:is(-textwrapper)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-rect" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:215:3:
[37m      215 │   &[32m-rect[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-rect)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-bottom" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:237:3:
[37m      237 │   &[32m-bottom[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-bottom)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-top" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:244:3:
[37m      244 │   &[32m-top[37m {
          │    [32m~~~~[37m
          ╵    [32m:is(-top)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-left" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:250:3:
[37m      250 │   &[32m-left[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-left)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-right" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:256:3:
[37m      256 │   &[32m-right[37m {
          │    [32m~~~~~~[37m
          ╵    [32m:is(-right)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-svg" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:353:3:
[37m      353 │   &[32m-svg[37m {
          │    [32m~~~~[37m
          ╵    [32m:is(-svg)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-mask" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:357:3:
[37m      357 │   &[32m-mask[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-mask)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-node" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:372:3:
[37m      372 │   &[32m-node[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-node)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:424:3:
[37m      424 │   &[32m-button[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-button)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-text" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:59:3:
[37m      59 │   &[32m-text[37m {
         │    [32m~~~~~[37m
         ╵    [32m:is(-text)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:123:3:
[37m      123 │   &[32m-button[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-button)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:158:3:
[37m      158 │   &[32m-button:last-child[37m {
          │    [32m~~~~~~~~~~~~~~~~~~[37m
          ╵    [32m:is(-button:last-child)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:162:15:
[37m      162 │   &.horizontal [32m&-button[37m {
          │                [32m~~~~~~~~[37m
          ╵                [32m-button&[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can move the "&" to the end of this selector as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:171:15:
[37m      171 │   &.horizontal [32m&-button:last-child[37m {
          │                [32m~~~~~~~~~~~~~~~~~~~[37m
          ╵                [32m-button:last-child&[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can move the "&" to the end of this selector as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:65:41:
[37m      65 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:70:41:
[37m      70 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:75:41:
[37m      75 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


Component update sent to client(s).
❯ Changes detected. Rebuilding...
✔ Changes detected. Rebuilding...
Initial chunk files | Names |  Raw size
main.js             | main  | 157.79 kB | 

Application bundle generation complete. [1.679 seconds]

[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-textwrapper" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:159:3:
[37m      159 │   &[32m-textwrapper[37m {
          │    [32m~~~~~~~~~~~~[37m
          ╵    [32m:is(-textwrapper)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-rect" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:215:3:
[37m      215 │   &[32m-rect[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-rect)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-bottom" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:237:3:
[37m      237 │   &[32m-bottom[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-bottom)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-top" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:244:3:
[37m      244 │   &[32m-top[37m {
          │    [32m~~~~[37m
          ╵    [32m:is(-top)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-left" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:250:3:
[37m      250 │   &[32m-left[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-left)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-right" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:256:3:
[37m      256 │   &[32m-right[37m {
          │    [32m~~~~~~[37m
          ╵    [32m:is(-right)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-svg" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:353:3:
[37m      353 │   &[32m-svg[37m {
          │    [32m~~~~[37m
          ╵    [32m:is(-svg)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-mask" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:357:3:
[37m      357 │   &[32m-mask[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-mask)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-node" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:372:3:
[37m      372 │   &[32m-node[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-node)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:424:3:
[37m      424 │   &[32m-button[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-button)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-text" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:59:3:
[37m      59 │   &[32m-text[37m {
         │    [32m~~~~~[37m
         ╵    [32m:is(-text)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:123:3:
[37m      123 │   &[32m-button[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-button)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:158:3:
[37m      158 │   &[32m-button:last-child[37m {
          │    [32m~~~~~~~~~~~~~~~~~~[37m
          ╵    [32m:is(-button:last-child)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:162:15:
[37m      162 │   &.horizontal [32m&-button[37m {
          │                [32m~~~~~~~~[37m
          ╵                [32m-button&[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can move the "&" to the end of this selector as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:171:15:
[37m      171 │   &.horizontal [32m&-button:last-child[37m {
          │                [32m~~~~~~~~~~~~~~~~~~~[37m
          ╵                [32m-button:last-child&[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can move the "&" to the end of this selector as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:65:41:
[37m      65 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:70:41:
[37m      70 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:75:41:
[37m      75 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


Page reload sent to client(s).
❯ Changes detected. Rebuilding...
✔ Changes detected. Rebuilding...
Initial chunk files | Names |  Raw size
main.js             | main  | 157.85 kB | 

Application bundle generation complete. [1.191 seconds]

[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-textwrapper" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:159:3:
[37m      159 │   &[32m-textwrapper[37m {
          │    [32m~~~~~~~~~~~~[37m
          ╵    [32m:is(-textwrapper)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-rect" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:215:3:
[37m      215 │   &[32m-rect[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-rect)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-bottom" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:237:3:
[37m      237 │   &[32m-bottom[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-bottom)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-top" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:244:3:
[37m      244 │   &[32m-top[37m {
          │    [32m~~~~[37m
          ╵    [32m:is(-top)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-left" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:250:3:
[37m      250 │   &[32m-left[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-left)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-right" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:256:3:
[37m      256 │   &[32m-right[37m {
          │    [32m~~~~~~[37m
          ╵    [32m:is(-right)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-svg" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:353:3:
[37m      353 │   &[32m-svg[37m {
          │    [32m~~~~[37m
          ╵    [32m:is(-svg)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-mask" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:357:3:
[37m      357 │   &[32m-mask[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-mask)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-node" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:372:3:
[37m      372 │   &[32m-node[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-node)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:424:3:
[37m      424 │   &[32m-button[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-button)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-text" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:59:3:
[37m      59 │   &[32m-text[37m {
         │    [32m~~~~~[37m
         ╵    [32m:is(-text)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:123:3:
[37m      123 │   &[32m-button[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-button)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:158:3:
[37m      158 │   &[32m-button:last-child[37m {
          │    [32m~~~~~~~~~~~~~~~~~~[37m
          ╵    [32m:is(-button:last-child)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:162:15:
[37m      162 │   &.horizontal [32m&-button[37m {
          │                [32m~~~~~~~~[37m
          ╵                [32m-button&[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can move the "&" to the end of this selector as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:171:15:
[37m      171 │   &.horizontal [32m&-button:last-child[37m {
          │                [32m~~~~~~~~~~~~~~~~~~~[37m
          ╵                [32m-button:last-child&[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can move the "&" to the end of this selector as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:65:41:
[37m      65 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:70:41:
[37m      70 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:75:41:
[37m      75 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


Component update sent to client(s).
❯ Changes detected. Rebuilding...
✔ Changes detected. Rebuilding...
Initial chunk files | Names |  Raw size
main.js             | main  | 157.92 kB | 

Application bundle generation complete. [0.771 seconds]

[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-textwrapper" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:159:3:
[37m      159 │   &[32m-textwrapper[37m {
          │    [32m~~~~~~~~~~~~[37m
          ╵    [32m:is(-textwrapper)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-rect" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:215:3:
[37m      215 │   &[32m-rect[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-rect)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-bottom" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:237:3:
[37m      237 │   &[32m-bottom[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-bottom)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-top" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:244:3:
[37m      244 │   &[32m-top[37m {
          │    [32m~~~~[37m
          ╵    [32m:is(-top)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-left" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:250:3:
[37m      250 │   &[32m-left[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-left)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-right" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:256:3:
[37m      256 │   &[32m-right[37m {
          │    [32m~~~~~~[37m
          ╵    [32m:is(-right)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-svg" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:353:3:
[37m      353 │   &[32m-svg[37m {
          │    [32m~~~~[37m
          ╵    [32m:is(-svg)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-mask" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:357:3:
[37m      357 │   &[32m-mask[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-mask)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-node" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:372:3:
[37m      372 │   &[32m-node[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-node)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:424:3:
[37m      424 │   &[32m-button[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-button)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-text" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:59:3:
[37m      59 │   &[32m-text[37m {
         │    [32m~~~~~[37m
         ╵    [32m:is(-text)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:123:3:
[37m      123 │   &[32m-button[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-button)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:158:3:
[37m      158 │   &[32m-button:last-child[37m {
          │    [32m~~~~~~~~~~~~~~~~~~[37m
          ╵    [32m:is(-button:last-child)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:162:15:
[37m      162 │   &.horizontal [32m&-button[37m {
          │                [32m~~~~~~~~[37m
          ╵                [32m-button&[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can move the "&" to the end of this selector as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:171:15:
[37m      171 │   &.horizontal [32m&-button:last-child[37m {
          │                [32m~~~~~~~~~~~~~~~~~~~[37m
          ╵                [32m-button:last-child&[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can move the "&" to the end of this selector as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:65:41:
[37m      65 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:70:41:
[37m      70 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:75:41:
[37m      75 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


Component update sent to client(s).
❯ Changes detected. Rebuilding...
✔ Changes detected. Rebuilding...
Initial chunk files | Names |  Raw size
main.js             | main  | 158.62 kB | 

Application bundle generation complete. [0.464 seconds]

[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-textwrapper" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:159:3:
[37m      159 │   &[32m-textwrapper[37m {
          │    [32m~~~~~~~~~~~~[37m
          ╵    [32m:is(-textwrapper)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-rect" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:215:3:
[37m      215 │   &[32m-rect[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-rect)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-bottom" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:237:3:
[37m      237 │   &[32m-bottom[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-bottom)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-top" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:244:3:
[37m      244 │   &[32m-top[37m {
          │    [32m~~~~[37m
          ╵    [32m:is(-top)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-left" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:250:3:
[37m      250 │   &[32m-left[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-left)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-right" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:256:3:
[37m      256 │   &[32m-right[37m {
          │    [32m~~~~~~[37m
          ╵    [32m:is(-right)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-svg" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:353:3:
[37m      353 │   &[32m-svg[37m {
          │    [32m~~~~[37m
          ╵    [32m:is(-svg)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-mask" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:357:3:
[37m      357 │   &[32m-mask[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-mask)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-node" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:372:3:
[37m      372 │   &[32m-node[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-node)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:424:3:
[37m      424 │   &[32m-button[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-button)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-text" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:59:3:
[37m      59 │   &[32m-text[37m {
         │    [32m~~~~~[37m
         ╵    [32m:is(-text)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:123:3:
[37m      123 │   &[32m-button[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-button)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:158:3:
[37m      158 │   &[32m-button:last-child[37m {
          │    [32m~~~~~~~~~~~~~~~~~~[37m
          ╵    [32m:is(-button:last-child)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:162:15:
[37m      162 │   &.horizontal [32m&-button[37m {
          │                [32m~~~~~~~~[37m
          ╵                [32m-button&[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can move the "&" to the end of this selector as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:171:15:
[37m      171 │   &.horizontal [32m&-button:last-child[37m {
          │                [32m~~~~~~~~~~~~~~~~~~~[37m
          ╵                [32m-button:last-child&[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can move the "&" to the end of this selector as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:65:41:
[37m      65 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:70:41:
[37m      70 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:75:41:
[37m      75 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


Component update sent to client(s).
❯ Changes detected. Rebuilding...
✔ Changes detected. Rebuilding...
Initial chunk files | Names |  Raw size
main.js             | main  | 159.21 kB | 

Application bundle generation complete. [0.742 seconds]

[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-textwrapper" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:159:3:
[37m      159 │   &[32m-textwrapper[37m {
          │    [32m~~~~~~~~~~~~[37m
          ╵    [32m:is(-textwrapper)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-rect" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:215:3:
[37m      215 │   &[32m-rect[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-rect)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-bottom" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:237:3:
[37m      237 │   &[32m-bottom[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-bottom)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-top" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:244:3:
[37m      244 │   &[32m-top[37m {
          │    [32m~~~~[37m
          ╵    [32m:is(-top)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-left" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:250:3:
[37m      250 │   &[32m-left[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-left)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-right" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:256:3:
[37m      256 │   &[32m-right[37m {
          │    [32m~~~~~~[37m
          ╵    [32m:is(-right)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-svg" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:353:3:
[37m      353 │   &[32m-svg[37m {
          │    [32m~~~~[37m
          ╵    [32m:is(-svg)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-mask" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:357:3:
[37m      357 │   &[32m-mask[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-mask)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-node" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:372:3:
[37m      372 │   &[32m-node[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-node)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:424:3:
[37m      424 │   &[32m-button[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-button)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-text" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:59:3:
[37m      59 │   &[32m-text[37m {
         │    [32m~~~~~[37m
         ╵    [32m:is(-text)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:123:3:
[37m      123 │   &[32m-button[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-button)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:158:3:
[37m      158 │   &[32m-button:last-child[37m {
          │    [32m~~~~~~~~~~~~~~~~~~[37m
          ╵    [32m:is(-button:last-child)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:162:15:
[37m      162 │   &.horizontal [32m&-button[37m {
          │                [32m~~~~~~~~[37m
          ╵                [32m-button&[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can move the "&" to the end of this selector as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:171:15:
[37m      171 │   &.horizontal [32m&-button:last-child[37m {
          │                [32m~~~~~~~~~~~~~~~~~~~[37m
          ╵                [32m-button:last-child&[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can move the "&" to the end of this selector as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:65:41:
[37m      65 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:70:41:
[37m      70 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:75:41:
[37m      75 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


Component update sent to client(s).
❯ Changes detected. Rebuilding...
✔ Changes detected. Rebuilding...
Initial chunk files | Names |  Raw size
main.js             | main  | 160.13 kB | 

Application bundle generation complete. [0.769 seconds]

[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-textwrapper" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:159:3:
[37m      159 │   &[32m-textwrapper[37m {
          │    [32m~~~~~~~~~~~~[37m
          ╵    [32m:is(-textwrapper)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-rect" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:215:3:
[37m      215 │   &[32m-rect[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-rect)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-bottom" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:237:3:
[37m      237 │   &[32m-bottom[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-bottom)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-top" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:244:3:
[37m      244 │   &[32m-top[37m {
          │    [32m~~~~[37m
          ╵    [32m:is(-top)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-left" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:250:3:
[37m      250 │   &[32m-left[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-left)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-right" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:256:3:
[37m      256 │   &[32m-right[37m {
          │    [32m~~~~~~[37m
          ╵    [32m:is(-right)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-svg" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:353:3:
[37m      353 │   &[32m-svg[37m {
          │    [32m~~~~[37m
          ╵    [32m:is(-svg)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-mask" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:357:3:
[37m      357 │   &[32m-mask[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-mask)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-node" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:372:3:
[37m      372 │   &[32m-node[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-node)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:424:3:
[37m      424 │   &[32m-button[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-button)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-text" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:59:3:
[37m      59 │   &[32m-text[37m {
         │    [32m~~~~~[37m
         ╵    [32m:is(-text)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:123:3:
[37m      123 │   &[32m-button[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-button)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:158:3:
[37m      158 │   &[32m-button:last-child[37m {
          │    [32m~~~~~~~~~~~~~~~~~~[37m
          ╵    [32m:is(-button:last-child)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:162:15:
[37m      162 │   &.horizontal [32m&-button[37m {
          │                [32m~~~~~~~~[37m
          ╵                [32m-button&[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can move the "&" to the end of this selector as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:171:15:
[37m      171 │   &.horizontal [32m&-button:last-child[37m {
          │                [32m~~~~~~~~~~~~~~~~~~~[37m
          ╵                [32m-button:last-child&[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can move the "&" to the end of this selector as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:65:41:
[37m      65 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:70:41:
[37m      70 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:75:41:
[37m      75 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


Component update sent to client(s).
❯ Changes detected. Rebuilding...
✔ Changes detected. Rebuilding...
Initial chunk files | Names |  Raw size
main.js             | main  | 160.73 kB | 

Application bundle generation complete. [0.594 seconds]

[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-textwrapper" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:159:3:
[37m      159 │   &[32m-textwrapper[37m {
          │    [32m~~~~~~~~~~~~[37m
          ╵    [32m:is(-textwrapper)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-rect" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:215:3:
[37m      215 │   &[32m-rect[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-rect)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-bottom" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:237:3:
[37m      237 │   &[32m-bottom[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-bottom)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-top" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:244:3:
[37m      244 │   &[32m-top[37m {
          │    [32m~~~~[37m
          ╵    [32m:is(-top)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-left" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:250:3:
[37m      250 │   &[32m-left[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-left)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-right" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:256:3:
[37m      256 │   &[32m-right[37m {
          │    [32m~~~~~~[37m
          ╵    [32m:is(-right)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-svg" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:353:3:
[37m      353 │   &[32m-svg[37m {
          │    [32m~~~~[37m
          ╵    [32m:is(-svg)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-mask" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:357:3:
[37m      357 │   &[32m-mask[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-mask)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-node" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:372:3:
[37m      372 │   &[32m-node[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-node)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:424:3:
[37m      424 │   &[32m-button[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-button)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-text" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:59:3:
[37m      59 │   &[32m-text[37m {
         │    [32m~~~~~[37m
         ╵    [32m:is(-text)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:123:3:
[37m      123 │   &[32m-button[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-button)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:158:3:
[37m      158 │   &[32m-button:last-child[37m {
          │    [32m~~~~~~~~~~~~~~~~~~[37m
          ╵    [32m:is(-button:last-child)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:162:15:
[37m      162 │   &.horizontal [32m&-button[37m {
          │                [32m~~~~~~~~[37m
          ╵                [32m-button&[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can move the "&" to the end of this selector as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:171:15:
[37m      171 │   &.horizontal [32m&-button:last-child[37m {
          │                [32m~~~~~~~~~~~~~~~~~~~[37m
          ╵                [32m-button:last-child&[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can move the "&" to the end of this selector as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:65:41:
[37m      65 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:70:41:
[37m      70 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:75:41:
[37m      75 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


Component update sent to client(s).
❯ Changes detected. Rebuilding...
✔ Changes detected. Rebuilding...
Initial chunk files | Names |  Raw size
main.js             | main  | 162.16 kB | 

Application bundle generation complete. [0.786 seconds]

[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-textwrapper" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:159:3:
[37m      159 │   &[32m-textwrapper[37m {
          │    [32m~~~~~~~~~~~~[37m
          ╵    [32m:is(-textwrapper)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-rect" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:215:3:
[37m      215 │   &[32m-rect[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-rect)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-bottom" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:237:3:
[37m      237 │   &[32m-bottom[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-bottom)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-top" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:244:3:
[37m      244 │   &[32m-top[37m {
          │    [32m~~~~[37m
          ╵    [32m:is(-top)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-left" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:250:3:
[37m      250 │   &[32m-left[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-left)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-right" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:256:3:
[37m      256 │   &[32m-right[37m {
          │    [32m~~~~~~[37m
          ╵    [32m:is(-right)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-svg" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:353:3:
[37m      353 │   &[32m-svg[37m {
          │    [32m~~~~[37m
          ╵    [32m:is(-svg)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-mask" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:357:3:
[37m      357 │   &[32m-mask[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-mask)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-node" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:372:3:
[37m      372 │   &[32m-node[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-node)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:424:3:
[37m      424 │   &[32m-button[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-button)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-text" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:59:3:
[37m      59 │   &[32m-text[37m {
         │    [32m~~~~~[37m
         ╵    [32m:is(-text)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:123:3:
[37m      123 │   &[32m-button[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-button)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:158:3:
[37m      158 │   &[32m-button:last-child[37m {
          │    [32m~~~~~~~~~~~~~~~~~~[37m
          ╵    [32m:is(-button:last-child)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:162:15:
[37m      162 │   &.horizontal [32m&-button[37m {
          │                [32m~~~~~~~~[37m
          ╵                [32m-button&[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can move the "&" to the end of this selector as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:171:15:
[37m      171 │   &.horizontal [32m&-button:last-child[37m {
          │                [32m~~~~~~~~~~~~~~~~~~~[37m
          ╵                [32m-button:last-child&[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can move the "&" to the end of this selector as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:65:41:
[37m      65 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:70:41:
[37m      70 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:75:41:
[37m      75 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


Component update sent to client(s).
❯ Changes detected. Rebuilding...
✔ Changes detected. Rebuilding...
Initial chunk files | Names |  Raw size
main.js             | main  | 162.83 kB | 

Application bundle generation complete. [0.579 seconds]

[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-textwrapper" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:159:3:
[37m      159 │   &[32m-textwrapper[37m {
          │    [32m~~~~~~~~~~~~[37m
          ╵    [32m:is(-textwrapper)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-rect" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:215:3:
[37m      215 │   &[32m-rect[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-rect)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-bottom" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:237:3:
[37m      237 │   &[32m-bottom[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-bottom)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-top" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:244:3:
[37m      244 │   &[32m-top[37m {
          │    [32m~~~~[37m
          ╵    [32m:is(-top)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-left" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:250:3:
[37m      250 │   &[32m-left[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-left)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-right" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:256:3:
[37m      256 │   &[32m-right[37m {
          │    [32m~~~~~~[37m
          ╵    [32m:is(-right)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-svg" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:353:3:
[37m      353 │   &[32m-svg[37m {
          │    [32m~~~~[37m
          ╵    [32m:is(-svg)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-mask" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:357:3:
[37m      357 │   &[32m-mask[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-mask)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-node" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:372:3:
[37m      372 │   &[32m-node[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-node)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:424:3:
[37m      424 │   &[32m-button[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-button)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-text" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:59:3:
[37m      59 │   &[32m-text[37m {
         │    [32m~~~~~[37m
         ╵    [32m:is(-text)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:123:3:
[37m      123 │   &[32m-button[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-button)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:158:3:
[37m      158 │   &[32m-button:last-child[37m {
          │    [32m~~~~~~~~~~~~~~~~~~[37m
          ╵    [32m:is(-button:last-child)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:162:15:
[37m      162 │   &.horizontal [32m&-button[37m {
          │                [32m~~~~~~~~[37m
          ╵                [32m-button&[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can move the "&" to the end of this selector as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:171:15:
[37m      171 │   &.horizontal [32m&-button:last-child[37m {
          │                [32m~~~~~~~~~~~~~~~~~~~[37m
          ╵                [32m-button:last-child&[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can move the "&" to the end of this selector as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:65:41:
[37m      65 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:70:41:
[37m      70 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:75:41:
[37m      75 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


Component update sent to client(s).
❯ Changes detected. Rebuilding...
✔ Changes detected. Rebuilding...
Initial chunk files | Names |  Raw size
main.js             | main  | 162.91 kB | 

Application bundle generation complete. [0.513 seconds]

[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-textwrapper" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:159:3:
[37m      159 │   &[32m-textwrapper[37m {
          │    [32m~~~~~~~~~~~~[37m
          ╵    [32m:is(-textwrapper)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-rect" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:215:3:
[37m      215 │   &[32m-rect[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-rect)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-bottom" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:237:3:
[37m      237 │   &[32m-bottom[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-bottom)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-top" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:244:3:
[37m      244 │   &[32m-top[37m {
          │    [32m~~~~[37m
          ╵    [32m:is(-top)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-left" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:250:3:
[37m      250 │   &[32m-left[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-left)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-right" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:256:3:
[37m      256 │   &[32m-right[37m {
          │    [32m~~~~~~[37m
          ╵    [32m:is(-right)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-svg" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:353:3:
[37m      353 │   &[32m-svg[37m {
          │    [32m~~~~[37m
          ╵    [32m:is(-svg)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-mask" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:357:3:
[37m      357 │   &[32m-mask[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-mask)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-node" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:372:3:
[37m      372 │   &[32m-node[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-node)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:424:3:
[37m      424 │   &[32m-button[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-button)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-text" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:59:3:
[37m      59 │   &[32m-text[37m {
         │    [32m~~~~~[37m
         ╵    [32m:is(-text)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:123:3:
[37m      123 │   &[32m-button[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-button)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:158:3:
[37m      158 │   &[32m-button:last-child[37m {
          │    [32m~~~~~~~~~~~~~~~~~~[37m
          ╵    [32m:is(-button:last-child)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:162:15:
[37m      162 │   &.horizontal [32m&-button[37m {
          │                [32m~~~~~~~~[37m
          ╵                [32m-button&[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can move the "&" to the end of this selector as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:171:15:
[37m      171 │   &.horizontal [32m&-button:last-child[37m {
          │                [32m~~~~~~~~~~~~~~~~~~~[37m
          ╵                [32m-button:last-child&[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can move the "&" to the end of this selector as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:65:41:
[37m      65 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:70:41:
[37m      70 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:75:41:
[37m      75 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


Page reload sent to client(s).
❯ Changes detected. Rebuilding...
✔ Changes detected. Rebuilding...
Initial chunk files | Names |  Raw size
main.js             | main  | 166.27 kB | 

Application bundle generation complete. [0.568 seconds]

[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-textwrapper" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:159:3:
[37m      159 │   &[32m-textwrapper[37m {
          │    [32m~~~~~~~~~~~~[37m
          ╵    [32m:is(-textwrapper)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-rect" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:215:3:
[37m      215 │   &[32m-rect[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-rect)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-bottom" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:237:3:
[37m      237 │   &[32m-bottom[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-bottom)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-top" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:244:3:
[37m      244 │   &[32m-top[37m {
          │    [32m~~~~[37m
          ╵    [32m:is(-top)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-left" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:250:3:
[37m      250 │   &[32m-left[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-left)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-right" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:256:3:
[37m      256 │   &[32m-right[37m {
          │    [32m~~~~~~[37m
          ╵    [32m:is(-right)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-svg" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:353:3:
[37m      353 │   &[32m-svg[37m {
          │    [32m~~~~[37m
          ╵    [32m:is(-svg)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-mask" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:357:3:
[37m      357 │   &[32m-mask[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-mask)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-node" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:372:3:
[37m      372 │   &[32m-node[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-node)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:424:3:
[37m      424 │   &[32m-button[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-button)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-text" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:59:3:
[37m      59 │   &[32m-text[37m {
         │    [32m~~~~~[37m
         ╵    [32m:is(-text)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:123:3:
[37m      123 │   &[32m-button[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-button)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:158:3:
[37m      158 │   &[32m-button:last-child[37m {
          │    [32m~~~~~~~~~~~~~~~~~~[37m
          ╵    [32m:is(-button:last-child)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:162:15:
[37m      162 │   &.horizontal [32m&-button[37m {
          │                [32m~~~~~~~~[37m
          ╵                [32m-button&[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can move the "&" to the end of this selector as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:171:15:
[37m      171 │   &.horizontal [32m&-button:last-child[37m {
          │                [32m~~~~~~~~~~~~~~~~~~~[37m
          ╵                [32m-button:last-child&[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can move the "&" to the end of this selector as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:65:41:
[37m      65 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:70:41:
[37m      70 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:75:41:
[37m      75 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


Component update sent to client(s).
❯ Changes detected. Rebuilding...
✔ Changes detected. Rebuilding...
Initial chunk files | Names |  Raw size
main.js             | main  | 166.39 kB | 

Application bundle generation complete. [0.779 seconds]

[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-textwrapper" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:159:3:
[37m      159 │   &[32m-textwrapper[37m {
          │    [32m~~~~~~~~~~~~[37m
          ╵    [32m:is(-textwrapper)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-rect" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:215:3:
[37m      215 │   &[32m-rect[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-rect)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-bottom" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:237:3:
[37m      237 │   &[32m-bottom[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-bottom)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-top" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:244:3:
[37m      244 │   &[32m-top[37m {
          │    [32m~~~~[37m
          ╵    [32m:is(-top)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-left" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:250:3:
[37m      250 │   &[32m-left[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-left)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-right" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:256:3:
[37m      256 │   &[32m-right[37m {
          │    [32m~~~~~~[37m
          ╵    [32m:is(-right)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-svg" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:353:3:
[37m      353 │   &[32m-svg[37m {
          │    [32m~~~~[37m
          ╵    [32m:is(-svg)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-mask" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:357:3:
[37m      357 │   &[32m-mask[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-mask)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-node" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:372:3:
[37m      372 │   &[32m-node[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-node)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:424:3:
[37m      424 │   &[32m-button[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-button)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-text" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:59:3:
[37m      59 │   &[32m-text[37m {
         │    [32m~~~~~[37m
         ╵    [32m:is(-text)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:123:3:
[37m      123 │   &[32m-button[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-button)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:158:3:
[37m      158 │   &[32m-button:last-child[37m {
          │    [32m~~~~~~~~~~~~~~~~~~[37m
          ╵    [32m:is(-button:last-child)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:162:15:
[37m      162 │   &.horizontal [32m&-button[37m {
          │                [32m~~~~~~~~[37m
          ╵                [32m-button&[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can move the "&" to the end of this selector as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:171:15:
[37m      171 │   &.horizontal [32m&-button:last-child[37m {
          │                [32m~~~~~~~~~~~~~~~~~~~[37m
          ╵                [32m-button:last-child&[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can move the "&" to the end of this selector as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:65:41:
[37m      65 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:70:41:
[37m      70 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:75:41:
[37m      75 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


Page reload sent to client(s).
❯ Changes detected. Rebuilding...
✔ Changes detected. Rebuilding...
Initial chunk files | Names |  Raw size
main.js             | main  | 168.92 kB | 

Application bundle generation complete. [0.464 seconds]

[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-textwrapper" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:159:3:
[37m      159 │   &[32m-textwrapper[37m {
          │    [32m~~~~~~~~~~~~[37m
          ╵    [32m:is(-textwrapper)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-rect" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:215:3:
[37m      215 │   &[32m-rect[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-rect)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-bottom" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:237:3:
[37m      237 │   &[32m-bottom[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-bottom)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-top" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:244:3:
[37m      244 │   &[32m-top[37m {
          │    [32m~~~~[37m
          ╵    [32m:is(-top)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-left" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:250:3:
[37m      250 │   &[32m-left[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-left)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-right" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:256:3:
[37m      256 │   &[32m-right[37m {
          │    [32m~~~~~~[37m
          ╵    [32m:is(-right)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-svg" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:353:3:
[37m      353 │   &[32m-svg[37m {
          │    [32m~~~~[37m
          ╵    [32m:is(-svg)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-mask" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:357:3:
[37m      357 │   &[32m-mask[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-mask)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-node" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:372:3:
[37m      372 │   &[32m-node[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-node)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:424:3:
[37m      424 │   &[32m-button[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-button)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-text" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:59:3:
[37m      59 │   &[32m-text[37m {
         │    [32m~~~~~[37m
         ╵    [32m:is(-text)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:123:3:
[37m      123 │   &[32m-button[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-button)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:158:3:
[37m      158 │   &[32m-button:last-child[37m {
          │    [32m~~~~~~~~~~~~~~~~~~[37m
          ╵    [32m:is(-button:last-child)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:162:15:
[37m      162 │   &.horizontal [32m&-button[37m {
          │                [32m~~~~~~~~[37m
          ╵                [32m-button&[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can move the "&" to the end of this selector as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:171:15:
[37m      171 │   &.horizontal [32m&-button:last-child[37m {
          │                [32m~~~~~~~~~~~~~~~~~~~[37m
          ╵                [32m-button:last-child&[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can move the "&" to the end of this selector as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:65:41:
[37m      65 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:70:41:
[37m      70 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:75:41:
[37m      75 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


Component update sent to client(s).
❯ Changes detected. Rebuilding...
✔ Changes detected. Rebuilding...
Initial chunk files | Names |  Raw size
main.js             | main  | 163.47 kB | 

Application bundle generation complete. [0.877 seconds]

[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-textwrapper" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:159:3:
[37m      159 │   &[32m-textwrapper[37m {
          │    [32m~~~~~~~~~~~~[37m
          ╵    [32m:is(-textwrapper)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-rect" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:215:3:
[37m      215 │   &[32m-rect[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-rect)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-bottom" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:237:3:
[37m      237 │   &[32m-bottom[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-bottom)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-top" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:244:3:
[37m      244 │   &[32m-top[37m {
          │    [32m~~~~[37m
          ╵    [32m:is(-top)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-left" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:250:3:
[37m      250 │   &[32m-left[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-left)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-right" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:256:3:
[37m      256 │   &[32m-right[37m {
          │    [32m~~~~~~[37m
          ╵    [32m:is(-right)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-svg" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:353:3:
[37m      353 │   &[32m-svg[37m {
          │    [32m~~~~[37m
          ╵    [32m:is(-svg)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-mask" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:357:3:
[37m      357 │   &[32m-mask[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-mask)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-node" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:372:3:
[37m      372 │   &[32m-node[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-node)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:424:3:
[37m      424 │   &[32m-button[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-button)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-text" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:59:3:
[37m      59 │   &[32m-text[37m {
         │    [32m~~~~~[37m
         ╵    [32m:is(-text)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:123:3:
[37m      123 │   &[32m-button[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-button)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:158:3:
[37m      158 │   &[32m-button:last-child[37m {
          │    [32m~~~~~~~~~~~~~~~~~~[37m
          ╵    [32m:is(-button:last-child)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:162:15:
[37m      162 │   &.horizontal [32m&-button[37m {
          │                [32m~~~~~~~~[37m
          ╵                [32m-button&[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can move the "&" to the end of this selector as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:171:15:
[37m      171 │   &.horizontal [32m&-button:last-child[37m {
          │                [32m~~~~~~~~~~~~~~~~~~~[37m
          ╵                [32m-button:last-child&[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can move the "&" to the end of this selector as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:65:41:
[37m      65 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:70:41:
[37m      70 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:75:41:
[37m      75 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


Component update sent to client(s).
❯ Changes detected. Rebuilding...
✔ Changes detected. Rebuilding...
Application bundle generation failed. [0.380 seconds]

[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-textwrapper" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:159:3:
[37m      159 │   &[32m-textwrapper[37m {
          │    [32m~~~~~~~~~~~~[37m
          ╵    [32m:is(-textwrapper)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-rect" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:215:3:
[37m      215 │   &[32m-rect[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-rect)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-bottom" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:237:3:
[37m      237 │   &[32m-bottom[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-bottom)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-top" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:244:3:
[37m      244 │   &[32m-top[37m {
          │    [32m~~~~[37m
          ╵    [32m:is(-top)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-left" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:250:3:
[37m      250 │   &[32m-left[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-left)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-right" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:256:3:
[37m      256 │   &[32m-right[37m {
          │    [32m~~~~~~[37m
          ╵    [32m:is(-right)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-svg" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:353:3:
[37m      353 │   &[32m-svg[37m {
          │    [32m~~~~[37m
          ╵    [32m:is(-svg)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-mask" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:357:3:
[37m      357 │   &[32m-mask[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-mask)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-node" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:372:3:
[37m      372 │   &[32m-node[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-node)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:424:3:
[37m      424 │   &[32m-button[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-button)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-text" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:59:3:
[37m      59 │   &[32m-text[37m {
         │    [32m~~~~~[37m
         ╵    [32m:is(-text)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:123:3:
[37m      123 │   &[32m-button[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-button)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:158:3:
[37m      158 │   &[32m-button:last-child[37m {
          │    [32m~~~~~~~~~~~~~~~~~~[37m
          ╵    [32m:is(-button:last-child)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:162:15:
[37m      162 │   &.horizontal [32m&-button[37m {
          │                [32m~~~~~~~~[37m
          ╵                [32m-button&[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can move the "&" to the end of this selector as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:171:15:
[37m      171 │   &.horizontal [32m&-button:last-child[37m {
          │                [32m~~~~~~~~~~~~~~~~~~~[37m
          ╵                [32m-button:last-child&[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can move the "&" to the end of this selector as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:65:41:
[37m      65 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:70:41:
[37m      70 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:75:41:
[37m      75 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


[31m✘ [41;31m[[41;97mERROR[41;31m][0m [1mTS2339: Property 'getSimplePath' does not exist on type 'EdgeWrapperComponent'.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/edge-wrapper/edge-wrapper.component.ts:35:20:
[37m      35 │           [attr.d]="[32mgetSimplePath[37m()"
         ╵                     [32m~~~~~~~~~~~~~[0m


❯ Changes detected. Rebuilding...
✔ Changes detected. Rebuilding...
Initial chunk files | Names         |  Raw size
main.js             | main          | 159.83 kB | 
styles.css          | styles        |  17.33 kB | 

                    | Initial total | 177.16 kB

Application bundle generation complete. [0.696 seconds]

[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-textwrapper" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:159:3:
[37m      159 │   &[32m-textwrapper[37m {
          │    [32m~~~~~~~~~~~~[37m
          ╵    [32m:is(-textwrapper)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-rect" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:215:3:
[37m      215 │   &[32m-rect[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-rect)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-bottom" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:237:3:
[37m      237 │   &[32m-bottom[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-bottom)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-top" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:244:3:
[37m      244 │   &[32m-top[37m {
          │    [32m~~~~[37m
          ╵    [32m:is(-top)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-left" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:250:3:
[37m      250 │   &[32m-left[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-left)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-right" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:256:3:
[37m      256 │   &[32m-right[37m {
          │    [32m~~~~~~[37m
          ╵    [32m:is(-right)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-svg" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:353:3:
[37m      353 │   &[32m-svg[37m {
          │    [32m~~~~[37m
          ╵    [32m:is(-svg)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-mask" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:357:3:
[37m      357 │   &[32m-mask[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-mask)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-node" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:372:3:
[37m      372 │   &[32m-node[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-node)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:424:3:
[37m      424 │   &[32m-button[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-button)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-text" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:59:3:
[37m      59 │   &[32m-text[37m {
         │    [32m~~~~~[37m
         ╵    [32m:is(-text)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:123:3:
[37m      123 │   &[32m-button[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-button)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:158:3:
[37m      158 │   &[32m-button:last-child[37m {
          │    [32m~~~~~~~~~~~~~~~~~~[37m
          ╵    [32m:is(-button:last-child)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:162:15:
[37m      162 │   &.horizontal [32m&-button[37m {
          │                [32m~~~~~~~~[37m
          ╵                [32m-button&[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can move the "&" to the end of this selector as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:171:15:
[37m      171 │   &.horizontal [32m&-button:last-child[37m {
          │                [32m~~~~~~~~~~~~~~~~~~~[37m
          ╵                [32m-button:last-child&[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can move the "&" to the end of this selector as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:65:41:
[37m      65 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:70:41:
[37m      70 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:75:41:
[37m      75 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


Page reload sent to client(s).
❯ Changes detected. Rebuilding...
✔ Changes detected. Rebuilding...
Initial chunk files | Names |  Raw size
main.js             | main  | 159.71 kB | 

Application bundle generation complete. [0.573 seconds]

[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-textwrapper" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:159:3:
[37m      159 │   &[32m-textwrapper[37m {
          │    [32m~~~~~~~~~~~~[37m
          ╵    [32m:is(-textwrapper)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-rect" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:215:3:
[37m      215 │   &[32m-rect[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-rect)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-bottom" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:237:3:
[37m      237 │   &[32m-bottom[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-bottom)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-top" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:244:3:
[37m      244 │   &[32m-top[37m {
          │    [32m~~~~[37m
          ╵    [32m:is(-top)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-left" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:250:3:
[37m      250 │   &[32m-left[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-left)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-right" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:256:3:
[37m      256 │   &[32m-right[37m {
          │    [32m~~~~~~[37m
          ╵    [32m:is(-right)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-svg" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:353:3:
[37m      353 │   &[32m-svg[37m {
          │    [32m~~~~[37m
          ╵    [32m:is(-svg)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-mask" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:357:3:
[37m      357 │   &[32m-mask[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-mask)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-node" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:372:3:
[37m      372 │   &[32m-node[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-node)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:424:3:
[37m      424 │   &[32m-button[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-button)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-text" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:59:3:
[37m      59 │   &[32m-text[37m {
         │    [32m~~~~~[37m
         ╵    [32m:is(-text)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:123:3:
[37m      123 │   &[32m-button[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-button)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:158:3:
[37m      158 │   &[32m-button:last-child[37m {
          │    [32m~~~~~~~~~~~~~~~~~~[37m
          ╵    [32m:is(-button:last-child)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:162:15:
[37m      162 │   &.horizontal [32m&-button[37m {
          │                [32m~~~~~~~~[37m
          ╵                [32m-button&[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can move the "&" to the end of this selector as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:171:15:
[37m      171 │   &.horizontal [32m&-button:last-child[37m {
          │                [32m~~~~~~~~~~~~~~~~~~~[37m
          ╵                [32m-button:last-child&[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can move the "&" to the end of this selector as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:65:41:
[37m      65 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:70:41:
[37m      70 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:75:41:
[37m      75 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


Page reload sent to client(s).
❯ Changes detected. Rebuilding...
✔ Changes detected. Rebuilding...
Initial chunk files | Names |  Raw size
main.js             | main  | 159.56 kB | 

Application bundle generation complete. [0.524 seconds]

[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-textwrapper" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:159:3:
[37m      159 │   &[32m-textwrapper[37m {
          │    [32m~~~~~~~~~~~~[37m
          ╵    [32m:is(-textwrapper)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-rect" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:215:3:
[37m      215 │   &[32m-rect[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-rect)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-bottom" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:237:3:
[37m      237 │   &[32m-bottom[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-bottom)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-top" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:244:3:
[37m      244 │   &[32m-top[37m {
          │    [32m~~~~[37m
          ╵    [32m:is(-top)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-left" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:250:3:
[37m      250 │   &[32m-left[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-left)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-right" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:256:3:
[37m      256 │   &[32m-right[37m {
          │    [32m~~~~~~[37m
          ╵    [32m:is(-right)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-svg" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:353:3:
[37m      353 │   &[32m-svg[37m {
          │    [32m~~~~[37m
          ╵    [32m:is(-svg)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-mask" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:357:3:
[37m      357 │   &[32m-mask[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-mask)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-node" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:372:3:
[37m      372 │   &[32m-node[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-node)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:424:3:
[37m      424 │   &[32m-button[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-button)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-text" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:59:3:
[37m      59 │   &[32m-text[37m {
         │    [32m~~~~~[37m
         ╵    [32m:is(-text)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:123:3:
[37m      123 │   &[32m-button[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-button)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:158:3:
[37m      158 │   &[32m-button:last-child[37m {
          │    [32m~~~~~~~~~~~~~~~~~~[37m
          ╵    [32m:is(-button:last-child)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:162:15:
[37m      162 │   &.horizontal [32m&-button[37m {
          │                [32m~~~~~~~~[37m
          ╵                [32m-button&[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can move the "&" to the end of this selector as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:171:15:
[37m      171 │   &.horizontal [32m&-button:last-child[37m {
          │                [32m~~~~~~~~~~~~~~~~~~~[37m
          ╵                [32m-button:last-child&[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can move the "&" to the end of this selector as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:65:41:
[37m      65 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:70:41:
[37m      70 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:75:41:
[37m      75 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


Component update sent to client(s).
❯ Changes detected. Rebuilding...
✔ Changes detected. Rebuilding...
Initial chunk files | Names |  Raw size
main.js             | main  | 160.11 kB | 

Application bundle generation complete. [0.525 seconds]

[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-textwrapper" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:159:3:
[37m      159 │   &[32m-textwrapper[37m {
          │    [32m~~~~~~~~~~~~[37m
          ╵    [32m:is(-textwrapper)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-rect" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:215:3:
[37m      215 │   &[32m-rect[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-rect)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-bottom" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:237:3:
[37m      237 │   &[32m-bottom[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-bottom)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-top" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:244:3:
[37m      244 │   &[32m-top[37m {
          │    [32m~~~~[37m
          ╵    [32m:is(-top)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-left" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:250:3:
[37m      250 │   &[32m-left[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-left)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-right" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:256:3:
[37m      256 │   &[32m-right[37m {
          │    [32m~~~~~~[37m
          ╵    [32m:is(-right)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-svg" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:353:3:
[37m      353 │   &[32m-svg[37m {
          │    [32m~~~~[37m
          ╵    [32m:is(-svg)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-mask" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:357:3:
[37m      357 │   &[32m-mask[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-mask)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-node" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:372:3:
[37m      372 │   &[32m-node[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-node)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:424:3:
[37m      424 │   &[32m-button[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-button)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-text" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:59:3:
[37m      59 │   &[32m-text[37m {
         │    [32m~~~~~[37m
         ╵    [32m:is(-text)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:123:3:
[37m      123 │   &[32m-button[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-button)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:158:3:
[37m      158 │   &[32m-button:last-child[37m {
          │    [32m~~~~~~~~~~~~~~~~~~[37m
          ╵    [32m:is(-button:last-child)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:162:15:
[37m      162 │   &.horizontal [32m&-button[37m {
          │                [32m~~~~~~~~[37m
          ╵                [32m-button&[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can move the "&" to the end of this selector as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:171:15:
[37m      171 │   &.horizontal [32m&-button:last-child[37m {
          │                [32m~~~~~~~~~~~~~~~~~~~[37m
          ╵                [32m-button:last-child&[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can move the "&" to the end of this selector as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:65:41:
[37m      65 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:70:41:
[37m      70 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:75:41:
[37m      75 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


Component update sent to client(s).
❯ Changes detected. Rebuilding...
✔ Changes detected. Rebuilding...
Application bundle generation failed. [0.911 seconds]

[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-textwrapper" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:159:3:
[37m      159 │   &[32m-textwrapper[37m {
          │    [32m~~~~~~~~~~~~[37m
          ╵    [32m:is(-textwrapper)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-rect" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:215:3:
[37m      215 │   &[32m-rect[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-rect)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-bottom" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:237:3:
[37m      237 │   &[32m-bottom[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-bottom)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-top" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:244:3:
[37m      244 │   &[32m-top[37m {
          │    [32m~~~~[37m
          ╵    [32m:is(-top)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-left" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:250:3:
[37m      250 │   &[32m-left[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-left)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-right" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:256:3:
[37m      256 │   &[32m-right[37m {
          │    [32m~~~~~~[37m
          ╵    [32m:is(-right)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-svg" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:353:3:
[37m      353 │   &[32m-svg[37m {
          │    [32m~~~~[37m
          ╵    [32m:is(-svg)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-mask" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:357:3:
[37m      357 │   &[32m-mask[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-mask)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-node" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:372:3:
[37m      372 │   &[32m-node[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-node)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:424:3:
[37m      424 │   &[32m-button[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-button)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-text" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:59:3:
[37m      59 │   &[32m-text[37m {
         │    [32m~~~~~[37m
         ╵    [32m:is(-text)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:123:3:
[37m      123 │   &[32m-button[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-button)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:158:3:
[37m      158 │   &[32m-button:last-child[37m {
          │    [32m~~~~~~~~~~~~~~~~~~[37m
          ╵    [32m:is(-button:last-child)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:162:15:
[37m      162 │   &.horizontal [32m&-button[37m {
          │                [32m~~~~~~~~[37m
          ╵                [32m-button&[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can move the "&" to the end of this selector as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:171:15:
[37m      171 │   &.horizontal [32m&-button:last-child[37m {
          │                [32m~~~~~~~~~~~~~~~~~~~[37m
          ╵                [32m-button:last-child&[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can move the "&" to the end of this selector as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:65:41:
[37m      65 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:70:41:
[37m      70 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:75:41:
[37m      75 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


[31m✘ [41;31m[[41;97mERROR[41;31m][0m [1mNG8002: Can't bind to 'y' since it isn't a known property of ':svg:text'.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/angular-flow.component.ts:93:25:
[37m      93 │ ...        <text x="10" [32my="{{ 40 + i * 15 }}"[37m fill="orange" font-s...
         ╵                         [32m~~~~~~~~~~~~~~~~~~~~~[0m


❯ Changes detected. Rebuilding...
✔ Changes detected. Rebuilding...
Initial chunk files | Names         |  Raw size
main.js             | main          | 160.89 kB | 
styles.css          | styles        |  17.33 kB | 

                    | Initial total | 178.22 kB

Application bundle generation complete. [0.476 seconds]

[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-textwrapper" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:159:3:
[37m      159 │   &[32m-textwrapper[37m {
          │    [32m~~~~~~~~~~~~[37m
          ╵    [32m:is(-textwrapper)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-rect" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:215:3:
[37m      215 │   &[32m-rect[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-rect)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-bottom" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:237:3:
[37m      237 │   &[32m-bottom[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-bottom)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-top" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:244:3:
[37m      244 │   &[32m-top[37m {
          │    [32m~~~~[37m
          ╵    [32m:is(-top)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-left" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:250:3:
[37m      250 │   &[32m-left[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-left)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-right" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:256:3:
[37m      256 │   &[32m-right[37m {
          │    [32m~~~~~~[37m
          ╵    [32m:is(-right)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-svg" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:353:3:
[37m      353 │   &[32m-svg[37m {
          │    [32m~~~~[37m
          ╵    [32m:is(-svg)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-mask" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:357:3:
[37m      357 │   &[32m-mask[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-mask)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-node" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:372:3:
[37m      372 │   &[32m-node[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-node)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:424:3:
[37m      424 │   &[32m-button[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-button)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-text" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:59:3:
[37m      59 │   &[32m-text[37m {
         │    [32m~~~~~[37m
         ╵    [32m:is(-text)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:123:3:
[37m      123 │   &[32m-button[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-button)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:158:3:
[37m      158 │   &[32m-button:last-child[37m {
          │    [32m~~~~~~~~~~~~~~~~~~[37m
          ╵    [32m:is(-button:last-child)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:162:15:
[37m      162 │   &.horizontal [32m&-button[37m {
          │                [32m~~~~~~~~[37m
          ╵                [32m-button&[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can move the "&" to the end of this selector as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:171:15:
[37m      171 │   &.horizontal [32m&-button:last-child[37m {
          │                [32m~~~~~~~~~~~~~~~~~~~[37m
          ╵                [32m-button:last-child&[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can move the "&" to the end of this selector as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:65:41:
[37m      65 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:70:41:
[37m      70 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:75:41:
[37m      75 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


Page reload sent to client(s).
❯ Changes detected. Rebuilding...
✔ Changes detected. Rebuilding...
Application bundle generation failed. [0.754 seconds]

[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-textwrapper" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:159:3:
[37m      159 │   &[32m-textwrapper[37m {
          │    [32m~~~~~~~~~~~~[37m
          ╵    [32m:is(-textwrapper)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-rect" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:215:3:
[37m      215 │   &[32m-rect[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-rect)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-bottom" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:237:3:
[37m      237 │   &[32m-bottom[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-bottom)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-top" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:244:3:
[37m      244 │   &[32m-top[37m {
          │    [32m~~~~[37m
          ╵    [32m:is(-top)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-left" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:250:3:
[37m      250 │   &[32m-left[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-left)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-right" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:256:3:
[37m      256 │   &[32m-right[37m {
          │    [32m~~~~~~[37m
          ╵    [32m:is(-right)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-svg" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:353:3:
[37m      353 │   &[32m-svg[37m {
          │    [32m~~~~[37m
          ╵    [32m:is(-svg)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-mask" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:357:3:
[37m      357 │   &[32m-mask[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-mask)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-node" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:372:3:
[37m      372 │   &[32m-node[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-node)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:424:3:
[37m      424 │   &[32m-button[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-button)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-text" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:59:3:
[37m      59 │   &[32m-text[37m {
         │    [32m~~~~~[37m
         ╵    [32m:is(-text)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:123:3:
[37m      123 │   &[32m-button[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-button)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:158:3:
[37m      158 │   &[32m-button:last-child[37m {
          │    [32m~~~~~~~~~~~~~~~~~~[37m
          ╵    [32m:is(-button:last-child)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:162:15:
[37m      162 │   &.horizontal [32m&-button[37m {
          │                [32m~~~~~~~~[37m
          ╵                [32m-button&[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can move the "&" to the end of this selector as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:171:15:
[37m      171 │   &.horizontal [32m&-button:last-child[37m {
          │                [32m~~~~~~~~~~~~~~~~~~~[37m
          ╵                [32m-button:last-child&[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can move the "&" to the end of this selector as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:65:41:
[37m      65 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:70:41:
[37m      70 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:75:41:
[37m      75 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


[31m✘ [41;31m[[41;97mERROR[41;31m][0m [1mTS2339: Property 'getDebugOffset' does not exist on type 'EdgeWrapperComponent'.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/edge-wrapper/edge-wrapper.component.ts:27:40:
[37m      27 │ ....x]="200" [attr.y]="80 + [32mgetDebugOffset[37m()" fill="blue" font-siz...
         ╵                             [32m~~~~~~~~~~~~~~[0m


[31m✘ [41;31m[[41;97mERROR[41;31m][0m [1mTS2339: Property 'getDebugOffset' does not exist on type 'EdgeWrapperComponent'.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/edge-wrapper/edge-wrapper.component.ts:30:40:
[37m      30 │ ....x]="200" [attr.y]="95 + [32mgetDebugOffset[37m()" fill="green" font-si...
         ╵                             [32m~~~~~~~~~~~~~~[0m


[31m✘ [41;31m[[41;97mERROR[41;31m][0m [1mTS2339: Property 'getDebugOffset' does not exist on type 'EdgeWrapperComponent'.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/edge-wrapper/edge-wrapper.component.ts:33:41:
[37m      33 │ ...x]="200" [attr.y]="110 + [32mgetDebugOffset[37m()" fill="red" font-size...
         ╵                             [32m~~~~~~~~~~~~~~[0m


[31m✘ [41;31m[[41;97mERROR[41;31m][0m [1mTS2339: Property 'getDebugOffset' does not exist on type 'EdgeWrapperComponent'.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/edge-wrapper/edge-wrapper.component.ts:46:43:
[37m      46 │ ...x]="200" [attr.y]="125 + [32mgetDebugOffset[37m()" fill="purple" font-s...
         ╵                             [32m~~~~~~~~~~~~~~[0m


❯ Changes detected. Rebuilding...
✔ Changes detected. Rebuilding...
Initial chunk files | Names         |  Raw size
main.js             | main          | 157.57 kB | 
styles.css          | styles        |  17.33 kB | 

                    | Initial total | 174.89 kB

Application bundle generation complete. [0.503 seconds]

[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-textwrapper" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:159:3:
[37m      159 │   &[32m-textwrapper[37m {
          │    [32m~~~~~~~~~~~~[37m
          ╵    [32m:is(-textwrapper)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-rect" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:215:3:
[37m      215 │   &[32m-rect[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-rect)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-bottom" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:237:3:
[37m      237 │   &[32m-bottom[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-bottom)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-top" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:244:3:
[37m      244 │   &[32m-top[37m {
          │    [32m~~~~[37m
          ╵    [32m:is(-top)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-left" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:250:3:
[37m      250 │   &[32m-left[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-left)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-right" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:256:3:
[37m      256 │   &[32m-right[37m {
          │    [32m~~~~~~[37m
          ╵    [32m:is(-right)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-svg" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:353:3:
[37m      353 │   &[32m-svg[37m {
          │    [32m~~~~[37m
          ╵    [32m:is(-svg)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-mask" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:357:3:
[37m      357 │   &[32m-mask[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-mask)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-node" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:372:3:
[37m      372 │   &[32m-node[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-node)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:424:3:
[37m      424 │   &[32m-button[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-button)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-text" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:59:3:
[37m      59 │   &[32m-text[37m {
         │    [32m~~~~~[37m
         ╵    [32m:is(-text)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:123:3:
[37m      123 │   &[32m-button[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-button)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:158:3:
[37m      158 │   &[32m-button:last-child[37m {
          │    [32m~~~~~~~~~~~~~~~~~~[37m
          ╵    [32m:is(-button:last-child)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:162:15:
[37m      162 │   &.horizontal [32m&-button[37m {
          │                [32m~~~~~~~~[37m
          ╵                [32m-button&[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can move the "&" to the end of this selector as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:171:15:
[37m      171 │   &.horizontal [32m&-button:last-child[37m {
          │                [32m~~~~~~~~~~~~~~~~~~~[37m
          ╵                [32m-button:last-child&[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can move the "&" to the end of this selector as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:65:41:
[37m      65 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:70:41:
[37m      70 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:75:41:
[37m      75 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


Page reload sent to client(s).
❯ Changes detected. Rebuilding...
✔ Changes detected. Rebuilding...
Initial chunk files | Names |  Raw size
main.js             | main  | 158.10 kB | 

Application bundle generation complete. [0.747 seconds]

[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-textwrapper" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:159:3:
[37m      159 │   &[32m-textwrapper[37m {
          │    [32m~~~~~~~~~~~~[37m
          ╵    [32m:is(-textwrapper)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-rect" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:215:3:
[37m      215 │   &[32m-rect[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-rect)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-bottom" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:237:3:
[37m      237 │   &[32m-bottom[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-bottom)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-top" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:244:3:
[37m      244 │   &[32m-top[37m {
          │    [32m~~~~[37m
          ╵    [32m:is(-top)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-left" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:250:3:
[37m      250 │   &[32m-left[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-left)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-right" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:256:3:
[37m      256 │   &[32m-right[37m {
          │    [32m~~~~~~[37m
          ╵    [32m:is(-right)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-svg" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:353:3:
[37m      353 │   &[32m-svg[37m {
          │    [32m~~~~[37m
          ╵    [32m:is(-svg)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-mask" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:357:3:
[37m      357 │   &[32m-mask[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-mask)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-node" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:372:3:
[37m      372 │   &[32m-node[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-node)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:424:3:
[37m      424 │   &[32m-button[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-button)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-text" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:59:3:
[37m      59 │   &[32m-text[37m {
         │    [32m~~~~~[37m
         ╵    [32m:is(-text)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:123:3:
[37m      123 │   &[32m-button[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-button)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:158:3:
[37m      158 │   &[32m-button:last-child[37m {
          │    [32m~~~~~~~~~~~~~~~~~~[37m
          ╵    [32m:is(-button:last-child)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:162:15:
[37m      162 │   &.horizontal [32m&-button[37m {
          │                [32m~~~~~~~~[37m
          ╵                [32m-button&[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can move the "&" to the end of this selector as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:171:15:
[37m      171 │   &.horizontal [32m&-button:last-child[37m {
          │                [32m~~~~~~~~~~~~~~~~~~~[37m
          ╵                [32m-button:last-child&[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can move the "&" to the end of this selector as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:65:41:
[37m      65 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:70:41:
[37m      70 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:75:41:
[37m      75 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


Component update sent to client(s).
❯ Changes detected. Rebuilding...
✔ Changes detected. Rebuilding...
Initial chunk files | Names |  Raw size
main.js             | main  | 155.32 kB | 

Application bundle generation complete. [0.574 seconds]

[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-textwrapper" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:159:3:
[37m      159 │   &[32m-textwrapper[37m {
          │    [32m~~~~~~~~~~~~[37m
          ╵    [32m:is(-textwrapper)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-rect" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:215:3:
[37m      215 │   &[32m-rect[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-rect)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-bottom" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:237:3:
[37m      237 │   &[32m-bottom[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-bottom)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-top" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:244:3:
[37m      244 │   &[32m-top[37m {
          │    [32m~~~~[37m
          ╵    [32m:is(-top)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-left" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:250:3:
[37m      250 │   &[32m-left[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-left)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-right" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:256:3:
[37m      256 │   &[32m-right[37m {
          │    [32m~~~~~~[37m
          ╵    [32m:is(-right)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-svg" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:353:3:
[37m      353 │   &[32m-svg[37m {
          │    [32m~~~~[37m
          ╵    [32m:is(-svg)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-mask" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:357:3:
[37m      357 │   &[32m-mask[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-mask)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-node" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:372:3:
[37m      372 │   &[32m-node[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-node)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:424:3:
[37m      424 │   &[32m-button[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-button)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-text" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:59:3:
[37m      59 │   &[32m-text[37m {
         │    [32m~~~~~[37m
         ╵    [32m:is(-text)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:123:3:
[37m      123 │   &[32m-button[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-button)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:158:3:
[37m      158 │   &[32m-button:last-child[37m {
          │    [32m~~~~~~~~~~~~~~~~~~[37m
          ╵    [32m:is(-button:last-child)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:162:15:
[37m      162 │   &.horizontal [32m&-button[37m {
          │                [32m~~~~~~~~[37m
          ╵                [32m-button&[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can move the "&" to the end of this selector as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:171:15:
[37m      171 │   &.horizontal [32m&-button:last-child[37m {
          │                [32m~~~~~~~~~~~~~~~~~~~[37m
          ╵                [32m-button:last-child&[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can move the "&" to the end of this selector as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:65:41:
[37m      65 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:70:41:
[37m      70 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:75:41:
[37m      75 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


Component update sent to client(s).
❯ Changes detected. Rebuilding...
✔ Changes detected. Rebuilding...
Initial chunk files | Names |  Raw size
main.js             | main  | 156.19 kB | 

Application bundle generation complete. [0.854 seconds]

[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-textwrapper" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:159:3:
[37m      159 │   &[32m-textwrapper[37m {
          │    [32m~~~~~~~~~~~~[37m
          ╵    [32m:is(-textwrapper)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-rect" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:215:3:
[37m      215 │   &[32m-rect[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-rect)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-bottom" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:237:3:
[37m      237 │   &[32m-bottom[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-bottom)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-top" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:244:3:
[37m      244 │   &[32m-top[37m {
          │    [32m~~~~[37m
          ╵    [32m:is(-top)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-left" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:250:3:
[37m      250 │   &[32m-left[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-left)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-right" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:256:3:
[37m      256 │   &[32m-right[37m {
          │    [32m~~~~~~[37m
          ╵    [32m:is(-right)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-svg" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:353:3:
[37m      353 │   &[32m-svg[37m {
          │    [32m~~~~[37m
          ╵    [32m:is(-svg)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-mask" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:357:3:
[37m      357 │   &[32m-mask[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-mask)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-node" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:372:3:
[37m      372 │   &[32m-node[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-node)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:424:3:
[37m      424 │   &[32m-button[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-button)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-text" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:59:3:
[37m      59 │   &[32m-text[37m {
         │    [32m~~~~~[37m
         ╵    [32m:is(-text)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:123:3:
[37m      123 │   &[32m-button[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-button)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:158:3:
[37m      158 │   &[32m-button:last-child[37m {
          │    [32m~~~~~~~~~~~~~~~~~~[37m
          ╵    [32m:is(-button:last-child)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:162:15:
[37m      162 │   &.horizontal [32m&-button[37m {
          │                [32m~~~~~~~~[37m
          ╵                [32m-button&[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can move the "&" to the end of this selector as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:171:15:
[37m      171 │   &.horizontal [32m&-button:last-child[37m {
          │                [32m~~~~~~~~~~~~~~~~~~~[37m
          ╵                [32m-button:last-child&[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can move the "&" to the end of this selector as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:65:41:
[37m      65 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:70:41:
[37m      70 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:75:41:
[37m      75 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


Component update sent to client(s).
❯ Changes detected. Rebuilding...
✔ Changes detected. Rebuilding...
Application bundle generation failed. [0.730 seconds]

[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-textwrapper" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:159:3:
[37m      159 │   &[32m-textwrapper[37m {
          │    [32m~~~~~~~~~~~~[37m
          ╵    [32m:is(-textwrapper)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-rect" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:215:3:
[37m      215 │   &[32m-rect[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-rect)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-bottom" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:237:3:
[37m      237 │   &[32m-bottom[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-bottom)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-top" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:244:3:
[37m      244 │   &[32m-top[37m {
          │    [32m~~~~[37m
          ╵    [32m:is(-top)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-left" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:250:3:
[37m      250 │   &[32m-left[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-left)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-right" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:256:3:
[37m      256 │   &[32m-right[37m {
          │    [32m~~~~~~[37m
          ╵    [32m:is(-right)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-svg" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:353:3:
[37m      353 │   &[32m-svg[37m {
          │    [32m~~~~[37m
          ╵    [32m:is(-svg)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-mask" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:357:3:
[37m      357 │   &[32m-mask[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-mask)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-node" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:372:3:
[37m      372 │   &[32m-node[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-node)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:424:3:
[37m      424 │   &[32m-button[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-button)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-text" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:59:3:
[37m      59 │   &[32m-text[37m {
         │    [32m~~~~~[37m
         ╵    [32m:is(-text)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:123:3:
[37m      123 │   &[32m-button[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-button)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:158:3:
[37m      158 │   &[32m-button:last-child[37m {
          │    [32m~~~~~~~~~~~~~~~~~~[37m
          ╵    [32m:is(-button:last-child)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:162:15:
[37m      162 │   &.horizontal [32m&-button[37m {
          │                [32m~~~~~~~~[37m
          ╵                [32m-button&[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can move the "&" to the end of this selector as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:171:15:
[37m      171 │   &.horizontal [32m&-button:last-child[37m {
          │                [32m~~~~~~~~~~~~~~~~~~~[37m
          ╵                [32m-button:last-child&[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can move the "&" to the end of this selector as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8113: EdgeWrapperComponent is not used within the template of AngularFlowComponent[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/angular-flow.component.ts:35:48:
[37m      35 │ ...ports: [CommonModule, NodeWrapperComponent, [32mEdgeWrapperComponent[37m],
         ╵                                                [32m~~~~~~~~~~~~~~~~~~~~[0m


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:65:41:
[37m      65 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:70:41:
[37m      70 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:75:41:
[37m      75 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


[31m✘ [41;31m[[41;97mERROR[41;31m][0m [1mTS2339: Property 'calculateEdgePath' does not exist on type 'AngularFlowComponent<NodeType, EdgeType>'.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/angular-flow.component.ts:103:28:
[37m      103 │ ...             [attr.d]="[32mcalculateEdgePath[37m(sourceNode, targetNod...
          ╵                           [32m~~~~~~~~~~~~~~~~~[0m


❯ Changes detected. Rebuilding...
✔ Changes detected. Rebuilding...
Initial chunk files | Names         |  Raw size
main.js             | main          | 159.00 kB | 
styles.css          | styles        |  17.33 kB | 

                    | Initial total | 176.33 kB

Application bundle generation complete. [0.528 seconds]

[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-textwrapper" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:159:3:
[37m      159 │   &[32m-textwrapper[37m {
          │    [32m~~~~~~~~~~~~[37m
          ╵    [32m:is(-textwrapper)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-rect" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:215:3:
[37m      215 │   &[32m-rect[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-rect)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-bottom" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:237:3:
[37m      237 │   &[32m-bottom[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-bottom)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-top" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:244:3:
[37m      244 │   &[32m-top[37m {
          │    [32m~~~~[37m
          ╵    [32m:is(-top)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-left" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:250:3:
[37m      250 │   &[32m-left[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-left)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-right" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:256:3:
[37m      256 │   &[32m-right[37m {
          │    [32m~~~~~~[37m
          ╵    [32m:is(-right)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-svg" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:353:3:
[37m      353 │   &[32m-svg[37m {
          │    [32m~~~~[37m
          ╵    [32m:is(-svg)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-mask" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:357:3:
[37m      357 │   &[32m-mask[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-mask)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-node" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:372:3:
[37m      372 │   &[32m-node[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-node)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:424:3:
[37m      424 │   &[32m-button[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-button)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-text" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:59:3:
[37m      59 │   &[32m-text[37m {
         │    [32m~~~~~[37m
         ╵    [32m:is(-text)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:123:3:
[37m      123 │   &[32m-button[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-button)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:158:3:
[37m      158 │   &[32m-button:last-child[37m {
          │    [32m~~~~~~~~~~~~~~~~~~[37m
          ╵    [32m:is(-button:last-child)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:162:15:
[37m      162 │   &.horizontal [32m&-button[37m {
          │                [32m~~~~~~~~[37m
          ╵                [32m-button&[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can move the "&" to the end of this selector as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:171:15:
[37m      171 │   &.horizontal [32m&-button:last-child[37m {
          │                [32m~~~~~~~~~~~~~~~~~~~[37m
          ╵                [32m-button:last-child&[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can move the "&" to the end of this selector as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8113: EdgeWrapperComponent is not used within the template of AngularFlowComponent[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/angular-flow.component.ts:35:48:
[37m      35 │ ...ports: [CommonModule, NodeWrapperComponent, [32mEdgeWrapperComponent[37m],
         ╵                                                [32m~~~~~~~~~~~~~~~~~~~~[0m


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:65:41:
[37m      65 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:70:41:
[37m      70 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:75:41:
[37m      75 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


Page reload sent to client(s).
❯ Changes detected. Rebuilding...
✔ Changes detected. Rebuilding...
Initial chunk files | Names |  Raw size
main.js             | main  | 159.93 kB | 

Application bundle generation complete. [0.553 seconds]

[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-textwrapper" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:159:3:
[37m      159 │   &[32m-textwrapper[37m {
          │    [32m~~~~~~~~~~~~[37m
          ╵    [32m:is(-textwrapper)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-rect" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:215:3:
[37m      215 │   &[32m-rect[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-rect)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-bottom" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:237:3:
[37m      237 │   &[32m-bottom[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-bottom)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-top" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:244:3:
[37m      244 │   &[32m-top[37m {
          │    [32m~~~~[37m
          ╵    [32m:is(-top)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-left" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:250:3:
[37m      250 │   &[32m-left[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-left)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-right" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:256:3:
[37m      256 │   &[32m-right[37m {
          │    [32m~~~~~~[37m
          ╵    [32m:is(-right)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-svg" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:353:3:
[37m      353 │   &[32m-svg[37m {
          │    [32m~~~~[37m
          ╵    [32m:is(-svg)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-mask" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:357:3:
[37m      357 │   &[32m-mask[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-mask)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-node" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:372:3:
[37m      372 │   &[32m-node[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-node)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:424:3:
[37m      424 │   &[32m-button[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-button)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-text" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:59:3:
[37m      59 │   &[32m-text[37m {
         │    [32m~~~~~[37m
         ╵    [32m:is(-text)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:123:3:
[37m      123 │   &[32m-button[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-button)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:158:3:
[37m      158 │   &[32m-button:last-child[37m {
          │    [32m~~~~~~~~~~~~~~~~~~[37m
          ╵    [32m:is(-button:last-child)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:162:15:
[37m      162 │   &.horizontal [32m&-button[37m {
          │                [32m~~~~~~~~[37m
          ╵                [32m-button&[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can move the "&" to the end of this selector as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:171:15:
[37m      171 │   &.horizontal [32m&-button:last-child[37m {
          │                [32m~~~~~~~~~~~~~~~~~~~[37m
          ╵                [32m-button:last-child&[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can move the "&" to the end of this selector as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8113: EdgeWrapperComponent is not used within the template of AngularFlowComponent[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/angular-flow.component.ts:35:48:
[37m      35 │ ...ports: [CommonModule, NodeWrapperComponent, [32mEdgeWrapperComponent[37m],
         ╵                                                [32m~~~~~~~~~~~~~~~~~~~~[0m


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:65:41:
[37m      65 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:70:41:
[37m      70 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:75:41:
[37m      75 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


Component update sent to client(s).
❯ Changes detected. Rebuilding...
✔ Changes detected. Rebuilding...
Initial chunk files | Names |  Raw size
main.js             | main  | 160.80 kB | 

Application bundle generation complete. [0.947 seconds]

[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-textwrapper" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:159:3:
[37m      159 │   &[32m-textwrapper[37m {
          │    [32m~~~~~~~~~~~~[37m
          ╵    [32m:is(-textwrapper)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-rect" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:215:3:
[37m      215 │   &[32m-rect[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-rect)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-bottom" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:237:3:
[37m      237 │   &[32m-bottom[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-bottom)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-top" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:244:3:
[37m      244 │   &[32m-top[37m {
          │    [32m~~~~[37m
          ╵    [32m:is(-top)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-left" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:250:3:
[37m      250 │   &[32m-left[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-left)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-right" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:256:3:
[37m      256 │   &[32m-right[37m {
          │    [32m~~~~~~[37m
          ╵    [32m:is(-right)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-svg" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:353:3:
[37m      353 │   &[32m-svg[37m {
          │    [32m~~~~[37m
          ╵    [32m:is(-svg)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-mask" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:357:3:
[37m      357 │   &[32m-mask[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-mask)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-node" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:372:3:
[37m      372 │   &[32m-node[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-node)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:424:3:
[37m      424 │   &[32m-button[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-button)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-text" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:59:3:
[37m      59 │   &[32m-text[37m {
         │    [32m~~~~~[37m
         ╵    [32m:is(-text)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:123:3:
[37m      123 │   &[32m-button[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-button)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:158:3:
[37m      158 │   &[32m-button:last-child[37m {
          │    [32m~~~~~~~~~~~~~~~~~~[37m
          ╵    [32m:is(-button:last-child)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:162:15:
[37m      162 │   &.horizontal [32m&-button[37m {
          │                [32m~~~~~~~~[37m
          ╵                [32m-button&[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can move the "&" to the end of this selector as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:171:15:
[37m      171 │   &.horizontal [32m&-button:last-child[37m {
          │                [32m~~~~~~~~~~~~~~~~~~~[37m
          ╵                [32m-button:last-child&[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can move the "&" to the end of this selector as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:65:41:
[37m      65 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:70:41:
[37m      70 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:75:41:
[37m      75 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


Page reload sent to client(s).
❯ Changes detected. Rebuilding...
✔ Changes detected. Rebuilding...
Initial chunk files | Names |  Raw size
main.js             | main  | 160.75 kB | 

Application bundle generation complete. [0.554 seconds]

[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-textwrapper" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:159:3:
[37m      159 │   &[32m-textwrapper[37m {
          │    [32m~~~~~~~~~~~~[37m
          ╵    [32m:is(-textwrapper)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-rect" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:215:3:
[37m      215 │   &[32m-rect[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-rect)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-bottom" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:237:3:
[37m      237 │   &[32m-bottom[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-bottom)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-top" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:244:3:
[37m      244 │   &[32m-top[37m {
          │    [32m~~~~[37m
          ╵    [32m:is(-top)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-left" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:250:3:
[37m      250 │   &[32m-left[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-left)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-right" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:256:3:
[37m      256 │   &[32m-right[37m {
          │    [32m~~~~~~[37m
          ╵    [32m:is(-right)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-svg" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:353:3:
[37m      353 │   &[32m-svg[37m {
          │    [32m~~~~[37m
          ╵    [32m:is(-svg)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-mask" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:357:3:
[37m      357 │   &[32m-mask[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-mask)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-node" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:372:3:
[37m      372 │   &[32m-node[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-node)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:424:3:
[37m      424 │   &[32m-button[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-button)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-text" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:59:3:
[37m      59 │   &[32m-text[37m {
         │    [32m~~~~~[37m
         ╵    [32m:is(-text)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:123:3:
[37m      123 │   &[32m-button[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-button)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:158:3:
[37m      158 │   &[32m-button:last-child[37m {
          │    [32m~~~~~~~~~~~~~~~~~~[37m
          ╵    [32m:is(-button:last-child)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:162:15:
[37m      162 │   &.horizontal [32m&-button[37m {
          │                [32m~~~~~~~~[37m
          ╵                [32m-button&[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can move the "&" to the end of this selector as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:171:15:
[37m      171 │   &.horizontal [32m&-button:last-child[37m {
          │                [32m~~~~~~~~~~~~~~~~~~~[37m
          ╵                [32m-button:last-child&[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can move the "&" to the end of this selector as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:65:41:
[37m      65 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:70:41:
[37m      70 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:75:41:
[37m      75 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


Component update sent to client(s).
Component update failed: Failed to execute 'setAttribute' on 'Element': '107' is not a valid attribute name.
InvalidCharacterError: Failed to execute 'setAttribute' on 'Element': '107' is not a valid attribute name.
    at EmulatedEncapsulationDomRenderer2.setAttribute (http://localhost:4200/@fs/Users/momochenisme/Desktop/xyflow/angular-xyflow/.angular/cache/20.1.3/angular-xyflow/vite/deps/chunk-BFD7XBWK.js?v=901444d3:617:10)
    at setUpAttributes (http://localhost:4200/@fs/Users/momochenisme/Desktop/xyflow/angular-xyflow/.angular/cache/20.1.3/angular-xyflow/vite/deps/chunk-XATB7OWE.js?v=901444d3:6450:18)
    at setupStaticAttributes (http://localhost:4200/@fs/Users/momochenisme/Desktop/xyflow/angular-xyflow/.angular/cache/20.1.3/angular-xyflow/vite/deps/chunk-XATB7OWE.js?v=901444d3:9704:5)
    at elementLikeStartShared (http://localhost:4200/@fs/Users/momochenisme/Desktop/xyflow/angular-xyflow/.angular/cache/20.1.3/angular-xyflow/vite/deps/chunk-XATB7OWE.js?v=901444d3:10616:5)
    at ɵɵelementStart (http://localhost:4200/@fs/Users/momochenisme/Desktop/xyflow/angular-xyflow/.angular/cache/20.1.3/angular-xyflow/vite/deps/chunk-XATB7OWE.js?v=901444d3:20156:3)
    at Module.ɵɵelement (http://localhost:4200/@fs/Users/momochenisme/Desktop/xyflow/angular-xyflow/.angular/cache/20.1.3/angular-xyflow/vite/deps/chunk-XATB7OWE.js?v=901444d3:20196:3)
    at AngularFlowComponent_For_11_Template (http://localhost:4200/@ng/component?c=src%2Fapp%2Fcomponents%2Fangular-flow%2Fangular-flow.component.ts%40AngularFlowComponent&t=1753569561128:51:19)
    at executeTemplate (http://localhost:4200/@fs/Users/momochenisme/Desktop/xyflow/angular-xyflow/.angular/cache/20.1.3/angular-xyflow/vite/deps/chunk-XATB7OWE.js?v=901444d3:10350:5)
    at renderView (http://localhost:4200/@fs/Users/momochenisme/Desktop/xyflow/angular-xyflow/.angular/cache/20.1.3/angular-xyflow/vite/deps/chunk-XATB7OWE.js?v=901444d3:10760:7)
    at createAndRenderEmbeddedLView (http://localhost:4200/@fs/Users/momochenisme/Desktop/xyflow/angular-xyflow/.angular/cache/20.1.3/angular-xyflow/vite/deps/chunk-XATB7OWE.js?v=901444d3:10808:5)
Please consider reporting the error at https://github.com/angular/angular-cli/issues
Page reload sent to client(s).
❯ Changes detected. Rebuilding...
✔ Changes detected. Rebuilding...
Initial chunk files | Names |  Raw size
main.js             | main  | 160.71 kB | 

Application bundle generation complete. [0.435 seconds]

[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-textwrapper" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:159:3:
[37m      159 │   &[32m-textwrapper[37m {
          │    [32m~~~~~~~~~~~~[37m
          ╵    [32m:is(-textwrapper)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-rect" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:215:3:
[37m      215 │   &[32m-rect[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-rect)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-bottom" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:237:3:
[37m      237 │   &[32m-bottom[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-bottom)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-top" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:244:3:
[37m      244 │   &[32m-top[37m {
          │    [32m~~~~[37m
          ╵    [32m:is(-top)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-left" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:250:3:
[37m      250 │   &[32m-left[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-left)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-right" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:256:3:
[37m      256 │   &[32m-right[37m {
          │    [32m~~~~~~[37m
          ╵    [32m:is(-right)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-svg" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:353:3:
[37m      353 │   &[32m-svg[37m {
          │    [32m~~~~[37m
          ╵    [32m:is(-svg)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-mask" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:357:3:
[37m      357 │   &[32m-mask[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-mask)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-node" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:372:3:
[37m      372 │   &[32m-node[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-node)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:424:3:
[37m      424 │   &[32m-button[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-button)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-text" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:59:3:
[37m      59 │   &[32m-text[37m {
         │    [32m~~~~~[37m
         ╵    [32m:is(-text)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:123:3:
[37m      123 │   &[32m-button[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-button)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:158:3:
[37m      158 │   &[32m-button:last-child[37m {
          │    [32m~~~~~~~~~~~~~~~~~~[37m
          ╵    [32m:is(-button:last-child)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:162:15:
[37m      162 │   &.horizontal [32m&-button[37m {
          │                [32m~~~~~~~~[37m
          ╵                [32m-button&[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can move the "&" to the end of this selector as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:171:15:
[37m      171 │   &.horizontal [32m&-button:last-child[37m {
          │                [32m~~~~~~~~~~~~~~~~~~~[37m
          ╵                [32m-button:last-child&[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can move the "&" to the end of this selector as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:65:41:
[37m      65 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:70:41:
[37m      70 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:75:41:
[37m      75 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


Component update sent to client(s).
Component update failed: Failed to execute 'setAttribute' on 'Element': '107' is not a valid attribute name.
InvalidCharacterError: Failed to execute 'setAttribute' on 'Element': '107' is not a valid attribute name.
    at EmulatedEncapsulationDomRenderer2.setAttribute (http://localhost:4200/@fs/Users/momochenisme/Desktop/xyflow/angular-xyflow/.angular/cache/20.1.3/angular-xyflow/vite/deps/chunk-BFD7XBWK.js?v=901444d3:617:10)
    at setUpAttributes (http://localhost:4200/@fs/Users/momochenisme/Desktop/xyflow/angular-xyflow/.angular/cache/20.1.3/angular-xyflow/vite/deps/chunk-XATB7OWE.js?v=901444d3:6450:18)
    at setupStaticAttributes (http://localhost:4200/@fs/Users/momochenisme/Desktop/xyflow/angular-xyflow/.angular/cache/20.1.3/angular-xyflow/vite/deps/chunk-XATB7OWE.js?v=901444d3:9704:5)
    at elementLikeStartShared (http://localhost:4200/@fs/Users/momochenisme/Desktop/xyflow/angular-xyflow/.angular/cache/20.1.3/angular-xyflow/vite/deps/chunk-XATB7OWE.js?v=901444d3:10616:5)
    at ɵɵelementStart (http://localhost:4200/@fs/Users/momochenisme/Desktop/xyflow/angular-xyflow/.angular/cache/20.1.3/angular-xyflow/vite/deps/chunk-XATB7OWE.js?v=901444d3:20156:3)
    at Module.ɵɵelement (http://localhost:4200/@fs/Users/momochenisme/Desktop/xyflow/angular-xyflow/.angular/cache/20.1.3/angular-xyflow/vite/deps/chunk-XATB7OWE.js?v=901444d3:20196:3)
    at AngularFlowComponent_For_11_Template (http://localhost:4200/@ng/component?c=src%2Fapp%2Fcomponents%2Fangular-flow%2Fangular-flow.component.ts%40AngularFlowComponent&t=1753569563781:50:19)
    at executeTemplate (http://localhost:4200/@fs/Users/momochenisme/Desktop/xyflow/angular-xyflow/.angular/cache/20.1.3/angular-xyflow/vite/deps/chunk-XATB7OWE.js?v=901444d3:10350:5)
    at renderView (http://localhost:4200/@fs/Users/momochenisme/Desktop/xyflow/angular-xyflow/.angular/cache/20.1.3/angular-xyflow/vite/deps/chunk-XATB7OWE.js?v=901444d3:10760:7)
    at createAndRenderEmbeddedLView (http://localhost:4200/@fs/Users/momochenisme/Desktop/xyflow/angular-xyflow/.angular/cache/20.1.3/angular-xyflow/vite/deps/chunk-XATB7OWE.js?v=901444d3:10808:5)
Please consider reporting the error at https://github.com/angular/angular-cli/issues
Page reload sent to client(s).
❯ Changes detected. Rebuilding...
✔ Changes detected. Rebuilding...
Initial chunk files | Names |  Raw size
main.js             | main  | 160.69 kB | 

Application bundle generation complete. [0.390 seconds]

[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-textwrapper" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:159:3:
[37m      159 │   &[32m-textwrapper[37m {
          │    [32m~~~~~~~~~~~~[37m
          ╵    [32m:is(-textwrapper)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-rect" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:215:3:
[37m      215 │   &[32m-rect[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-rect)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-bottom" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:237:3:
[37m      237 │   &[32m-bottom[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-bottom)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-top" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:244:3:
[37m      244 │   &[32m-top[37m {
          │    [32m~~~~[37m
          ╵    [32m:is(-top)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-left" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:250:3:
[37m      250 │   &[32m-left[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-left)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-right" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:256:3:
[37m      256 │   &[32m-right[37m {
          │    [32m~~~~~~[37m
          ╵    [32m:is(-right)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-svg" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:353:3:
[37m      353 │   &[32m-svg[37m {
          │    [32m~~~~[37m
          ╵    [32m:is(-svg)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-mask" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:357:3:
[37m      357 │   &[32m-mask[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-mask)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-node" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:372:3:
[37m      372 │   &[32m-node[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-node)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:424:3:
[37m      424 │   &[32m-button[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-button)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-text" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:59:3:
[37m      59 │   &[32m-text[37m {
         │    [32m~~~~~[37m
         ╵    [32m:is(-text)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:123:3:
[37m      123 │   &[32m-button[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-button)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:158:3:
[37m      158 │   &[32m-button:last-child[37m {
          │    [32m~~~~~~~~~~~~~~~~~~[37m
          ╵    [32m:is(-button:last-child)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:162:15:
[37m      162 │   &.horizontal [32m&-button[37m {
          │                [32m~~~~~~~~[37m
          ╵                [32m-button&[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can move the "&" to the end of this selector as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:171:15:
[37m      171 │   &.horizontal [32m&-button:last-child[37m {
          │                [32m~~~~~~~~~~~~~~~~~~~[37m
          ╵                [32m-button:last-child&[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can move the "&" to the end of this selector as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:65:41:
[37m      65 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:70:41:
[37m      70 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:75:41:
[37m      75 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


Component update sent to client(s).
Component update failed: Failed to execute 'setAttribute' on 'Element': '108' is not a valid attribute name.
InvalidCharacterError: Failed to execute 'setAttribute' on 'Element': '108' is not a valid attribute name.
    at EmulatedEncapsulationDomRenderer2.setAttribute (http://localhost:4200/@fs/Users/momochenisme/Desktop/xyflow/angular-xyflow/.angular/cache/20.1.3/angular-xyflow/vite/deps/chunk-BFD7XBWK.js?v=901444d3:617:10)
    at setUpAttributes (http://localhost:4200/@fs/Users/momochenisme/Desktop/xyflow/angular-xyflow/.angular/cache/20.1.3/angular-xyflow/vite/deps/chunk-XATB7OWE.js?v=901444d3:6450:18)
    at setupStaticAttributes (http://localhost:4200/@fs/Users/momochenisme/Desktop/xyflow/angular-xyflow/.angular/cache/20.1.3/angular-xyflow/vite/deps/chunk-XATB7OWE.js?v=901444d3:9704:5)
    at elementLikeStartShared (http://localhost:4200/@fs/Users/momochenisme/Desktop/xyflow/angular-xyflow/.angular/cache/20.1.3/angular-xyflow/vite/deps/chunk-XATB7OWE.js?v=901444d3:10616:5)
    at ɵɵelementStart (http://localhost:4200/@fs/Users/momochenisme/Desktop/xyflow/angular-xyflow/.angular/cache/20.1.3/angular-xyflow/vite/deps/chunk-XATB7OWE.js?v=901444d3:20156:3)
    at Module.ɵɵelement (http://localhost:4200/@fs/Users/momochenisme/Desktop/xyflow/angular-xyflow/.angular/cache/20.1.3/angular-xyflow/vite/deps/chunk-XATB7OWE.js?v=901444d3:20196:3)
    at AngularFlowComponent_For_11_Template (http://localhost:4200/@ng/component?c=src%2Fapp%2Fcomponents%2Fangular-flow%2Fangular-flow.component.ts%40AngularFlowComponent&t=1753569569721:50:19)
    at executeTemplate (http://localhost:4200/@fs/Users/momochenisme/Desktop/xyflow/angular-xyflow/.angular/cache/20.1.3/angular-xyflow/vite/deps/chunk-XATB7OWE.js?v=901444d3:10350:5)
    at renderView (http://localhost:4200/@fs/Users/momochenisme/Desktop/xyflow/angular-xyflow/.angular/cache/20.1.3/angular-xyflow/vite/deps/chunk-XATB7OWE.js?v=901444d3:10760:7)
    at createAndRenderEmbeddedLView (http://localhost:4200/@fs/Users/momochenisme/Desktop/xyflow/angular-xyflow/.angular/cache/20.1.3/angular-xyflow/vite/deps/chunk-XATB7OWE.js?v=901444d3:10808:5)
Please consider reporting the error at https://github.com/angular/angular-cli/issues
Page reload sent to client(s).
❯ Changes detected. Rebuilding...
✔ Changes detected. Rebuilding...
Initial chunk files | Names |  Raw size
main.js             | main  | 160.66 kB | 

Application bundle generation complete. [0.359 seconds]

[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-textwrapper" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:159:3:
[37m      159 │   &[32m-textwrapper[37m {
          │    [32m~~~~~~~~~~~~[37m
          ╵    [32m:is(-textwrapper)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-rect" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:215:3:
[37m      215 │   &[32m-rect[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-rect)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-bottom" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:237:3:
[37m      237 │   &[32m-bottom[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-bottom)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-top" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:244:3:
[37m      244 │   &[32m-top[37m {
          │    [32m~~~~[37m
          ╵    [32m:is(-top)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-left" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:250:3:
[37m      250 │   &[32m-left[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-left)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-right" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:256:3:
[37m      256 │   &[32m-right[37m {
          │    [32m~~~~~~[37m
          ╵    [32m:is(-right)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-svg" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:353:3:
[37m      353 │   &[32m-svg[37m {
          │    [32m~~~~[37m
          ╵    [32m:is(-svg)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-mask" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:357:3:
[37m      357 │   &[32m-mask[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-mask)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-node" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:372:3:
[37m      372 │   &[32m-node[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-node)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:424:3:
[37m      424 │   &[32m-button[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-button)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-text" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:59:3:
[37m      59 │   &[32m-text[37m {
         │    [32m~~~~~[37m
         ╵    [32m:is(-text)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:123:3:
[37m      123 │   &[32m-button[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-button)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:158:3:
[37m      158 │   &[32m-button:last-child[37m {
          │    [32m~~~~~~~~~~~~~~~~~~[37m
          ╵    [32m:is(-button:last-child)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:162:15:
[37m      162 │   &.horizontal [32m&-button[37m {
          │                [32m~~~~~~~~[37m
          ╵                [32m-button&[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can move the "&" to the end of this selector as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:171:15:
[37m      171 │   &.horizontal [32m&-button:last-child[37m {
          │                [32m~~~~~~~~~~~~~~~~~~~[37m
          ╵                [32m-button:last-child&[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can move the "&" to the end of this selector as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:65:41:
[37m      65 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:70:41:
[37m      70 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:75:41:
[37m      75 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


Component update sent to client(s).
Component update failed: Failed to execute 'setAttribute' on 'Element': '109' is not a valid attribute name.
InvalidCharacterError: Failed to execute 'setAttribute' on 'Element': '109' is not a valid attribute name.
    at EmulatedEncapsulationDomRenderer2.setAttribute (http://localhost:4200/@fs/Users/momochenisme/Desktop/xyflow/angular-xyflow/.angular/cache/20.1.3/angular-xyflow/vite/deps/chunk-BFD7XBWK.js?v=901444d3:617:10)
    at setUpAttributes (http://localhost:4200/@fs/Users/momochenisme/Desktop/xyflow/angular-xyflow/.angular/cache/20.1.3/angular-xyflow/vite/deps/chunk-XATB7OWE.js?v=901444d3:6450:18)
    at setupStaticAttributes (http://localhost:4200/@fs/Users/momochenisme/Desktop/xyflow/angular-xyflow/.angular/cache/20.1.3/angular-xyflow/vite/deps/chunk-XATB7OWE.js?v=901444d3:9704:5)
    at elementLikeStartShared (http://localhost:4200/@fs/Users/momochenisme/Desktop/xyflow/angular-xyflow/.angular/cache/20.1.3/angular-xyflow/vite/deps/chunk-XATB7OWE.js?v=901444d3:10616:5)
    at ɵɵelementStart (http://localhost:4200/@fs/Users/momochenisme/Desktop/xyflow/angular-xyflow/.angular/cache/20.1.3/angular-xyflow/vite/deps/chunk-XATB7OWE.js?v=901444d3:20156:3)
    at Module.ɵɵelement (http://localhost:4200/@fs/Users/momochenisme/Desktop/xyflow/angular-xyflow/.angular/cache/20.1.3/angular-xyflow/vite/deps/chunk-XATB7OWE.js?v=901444d3:20196:3)
    at AngularFlowComponent_For_11_Template (http://localhost:4200/@ng/component?c=src%2Fapp%2Fcomponents%2Fangular-flow%2Fangular-flow.component.ts%40AngularFlowComponent&t=1753569573629:50:19)
    at executeTemplate (http://localhost:4200/@fs/Users/momochenisme/Desktop/xyflow/angular-xyflow/.angular/cache/20.1.3/angular-xyflow/vite/deps/chunk-XATB7OWE.js?v=901444d3:10350:5)
    at renderView (http://localhost:4200/@fs/Users/momochenisme/Desktop/xyflow/angular-xyflow/.angular/cache/20.1.3/angular-xyflow/vite/deps/chunk-XATB7OWE.js?v=901444d3:10760:7)
    at createAndRenderEmbeddedLView (http://localhost:4200/@fs/Users/momochenisme/Desktop/xyflow/angular-xyflow/.angular/cache/20.1.3/angular-xyflow/vite/deps/chunk-XATB7OWE.js?v=901444d3:10808:5)
Please consider reporting the error at https://github.com/angular/angular-cli/issues
Page reload sent to client(s).
❯ Changes detected. Rebuilding...
✔ Changes detected. Rebuilding...
Initial chunk files | Names |  Raw size
main.js             | main  | 160.63 kB | 

Application bundle generation complete. [0.439 seconds]

[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-textwrapper" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:159:3:
[37m      159 │   &[32m-textwrapper[37m {
          │    [32m~~~~~~~~~~~~[37m
          ╵    [32m:is(-textwrapper)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-rect" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:215:3:
[37m      215 │   &[32m-rect[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-rect)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-bottom" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:237:3:
[37m      237 │   &[32m-bottom[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-bottom)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-top" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:244:3:
[37m      244 │   &[32m-top[37m {
          │    [32m~~~~[37m
          ╵    [32m:is(-top)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-left" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:250:3:
[37m      250 │   &[32m-left[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-left)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-right" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:256:3:
[37m      256 │   &[32m-right[37m {
          │    [32m~~~~~~[37m
          ╵    [32m:is(-right)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-svg" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:353:3:
[37m      353 │   &[32m-svg[37m {
          │    [32m~~~~[37m
          ╵    [32m:is(-svg)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-mask" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:357:3:
[37m      357 │   &[32m-mask[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-mask)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-node" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:372:3:
[37m      372 │   &[32m-node[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-node)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:424:3:
[37m      424 │   &[32m-button[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-button)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-text" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:59:3:
[37m      59 │   &[32m-text[37m {
         │    [32m~~~~~[37m
         ╵    [32m:is(-text)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:123:3:
[37m      123 │   &[32m-button[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-button)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:158:3:
[37m      158 │   &[32m-button:last-child[37m {
          │    [32m~~~~~~~~~~~~~~~~~~[37m
          ╵    [32m:is(-button:last-child)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:162:15:
[37m      162 │   &.horizontal [32m&-button[37m {
          │                [32m~~~~~~~~[37m
          ╵                [32m-button&[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can move the "&" to the end of this selector as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:171:15:
[37m      171 │   &.horizontal [32m&-button:last-child[37m {
          │                [32m~~~~~~~~~~~~~~~~~~~[37m
          ╵                [32m-button:last-child&[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can move the "&" to the end of this selector as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:65:41:
[37m      65 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:70:41:
[37m      70 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:75:41:
[37m      75 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


Component update sent to client(s).
Component update failed: Failed to execute 'setAttribute' on 'Element': '110' is not a valid attribute name.
InvalidCharacterError: Failed to execute 'setAttribute' on 'Element': '110' is not a valid attribute name.
    at EmulatedEncapsulationDomRenderer2.setAttribute (http://localhost:4200/@fs/Users/momochenisme/Desktop/xyflow/angular-xyflow/.angular/cache/20.1.3/angular-xyflow/vite/deps/chunk-BFD7XBWK.js?v=901444d3:617:10)
    at setUpAttributes (http://localhost:4200/@fs/Users/momochenisme/Desktop/xyflow/angular-xyflow/.angular/cache/20.1.3/angular-xyflow/vite/deps/chunk-XATB7OWE.js?v=901444d3:6450:18)
    at setupStaticAttributes (http://localhost:4200/@fs/Users/momochenisme/Desktop/xyflow/angular-xyflow/.angular/cache/20.1.3/angular-xyflow/vite/deps/chunk-XATB7OWE.js?v=901444d3:9704:5)
    at elementLikeStartShared (http://localhost:4200/@fs/Users/momochenisme/Desktop/xyflow/angular-xyflow/.angular/cache/20.1.3/angular-xyflow/vite/deps/chunk-XATB7OWE.js?v=901444d3:10616:5)
    at ɵɵelementStart (http://localhost:4200/@fs/Users/momochenisme/Desktop/xyflow/angular-xyflow/.angular/cache/20.1.3/angular-xyflow/vite/deps/chunk-XATB7OWE.js?v=901444d3:20156:3)
    at Module.ɵɵelement (http://localhost:4200/@fs/Users/momochenisme/Desktop/xyflow/angular-xyflow/.angular/cache/20.1.3/angular-xyflow/vite/deps/chunk-XATB7OWE.js?v=901444d3:20196:3)
    at AngularFlowComponent_For_11_Template (http://localhost:4200/@ng/component?c=src%2Fapp%2Fcomponents%2Fangular-flow%2Fangular-flow.component.ts%40AngularFlowComponent&t=1753569579092:50:19)
    at executeTemplate (http://localhost:4200/@fs/Users/momochenisme/Desktop/xyflow/angular-xyflow/.angular/cache/20.1.3/angular-xyflow/vite/deps/chunk-XATB7OWE.js?v=901444d3:10350:5)
    at renderView (http://localhost:4200/@fs/Users/momochenisme/Desktop/xyflow/angular-xyflow/.angular/cache/20.1.3/angular-xyflow/vite/deps/chunk-XATB7OWE.js?v=901444d3:10760:7)
    at createAndRenderEmbeddedLView (http://localhost:4200/@fs/Users/momochenisme/Desktop/xyflow/angular-xyflow/.angular/cache/20.1.3/angular-xyflow/vite/deps/chunk-XATB7OWE.js?v=901444d3:10808:5)
Please consider reporting the error at https://github.com/angular/angular-cli/issues
Page reload sent to client(s).
❯ Changes detected. Rebuilding...
✔ Changes detected. Rebuilding...
Initial chunk files | Names |  Raw size
main.js             | main  | 160.61 kB | 

Application bundle generation complete. [0.376 seconds]

[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-textwrapper" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:159:3:
[37m      159 │   &[32m-textwrapper[37m {
          │    [32m~~~~~~~~~~~~[37m
          ╵    [32m:is(-textwrapper)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-rect" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:215:3:
[37m      215 │   &[32m-rect[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-rect)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-bottom" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:237:3:
[37m      237 │   &[32m-bottom[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-bottom)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-top" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:244:3:
[37m      244 │   &[32m-top[37m {
          │    [32m~~~~[37m
          ╵    [32m:is(-top)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-left" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:250:3:
[37m      250 │   &[32m-left[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-left)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-right" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:256:3:
[37m      256 │   &[32m-right[37m {
          │    [32m~~~~~~[37m
          ╵    [32m:is(-right)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-svg" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:353:3:
[37m      353 │   &[32m-svg[37m {
          │    [32m~~~~[37m
          ╵    [32m:is(-svg)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-mask" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:357:3:
[37m      357 │   &[32m-mask[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-mask)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-node" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:372:3:
[37m      372 │   &[32m-node[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-node)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:424:3:
[37m      424 │   &[32m-button[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-button)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-text" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:59:3:
[37m      59 │   &[32m-text[37m {
         │    [32m~~~~~[37m
         ╵    [32m:is(-text)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:123:3:
[37m      123 │   &[32m-button[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-button)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:158:3:
[37m      158 │   &[32m-button:last-child[37m {
          │    [32m~~~~~~~~~~~~~~~~~~[37m
          ╵    [32m:is(-button:last-child)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:162:15:
[37m      162 │   &.horizontal [32m&-button[37m {
          │                [32m~~~~~~~~[37m
          ╵                [32m-button&[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can move the "&" to the end of this selector as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:171:15:
[37m      171 │   &.horizontal [32m&-button:last-child[37m {
          │                [32m~~~~~~~~~~~~~~~~~~~[37m
          ╵                [32m-button:last-child&[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can move the "&" to the end of this selector as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:65:41:
[37m      65 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:70:41:
[37m      70 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:75:41:
[37m      75 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


Component update sent to client(s).
❯ Changes detected. Rebuilding...
✔ Changes detected. Rebuilding...
Initial chunk files | Names |  Raw size
main.js             | main  | 160.56 kB | 

Application bundle generation complete. [0.337 seconds]

[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-textwrapper" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:159:3:
[37m      159 │   &[32m-textwrapper[37m {
          │    [32m~~~~~~~~~~~~[37m
          ╵    [32m:is(-textwrapper)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-rect" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:215:3:
[37m      215 │   &[32m-rect[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-rect)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-bottom" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:237:3:
[37m      237 │   &[32m-bottom[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-bottom)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-top" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:244:3:
[37m      244 │   &[32m-top[37m {
          │    [32m~~~~[37m
          ╵    [32m:is(-top)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-left" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:250:3:
[37m      250 │   &[32m-left[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-left)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-right" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:256:3:
[37m      256 │   &[32m-right[37m {
          │    [32m~~~~~~[37m
          ╵    [32m:is(-right)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-svg" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:353:3:
[37m      353 │   &[32m-svg[37m {
          │    [32m~~~~[37m
          ╵    [32m:is(-svg)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-mask" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:357:3:
[37m      357 │   &[32m-mask[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-mask)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-node" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:372:3:
[37m      372 │   &[32m-node[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-node)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:424:3:
[37m      424 │   &[32m-button[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-button)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-text" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:59:3:
[37m      59 │   &[32m-text[37m {
         │    [32m~~~~~[37m
         ╵    [32m:is(-text)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:123:3:
[37m      123 │   &[32m-button[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-button)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:158:3:
[37m      158 │   &[32m-button:last-child[37m {
          │    [32m~~~~~~~~~~~~~~~~~~[37m
          ╵    [32m:is(-button:last-child)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:162:15:
[37m      162 │   &.horizontal [32m&-button[37m {
          │                [32m~~~~~~~~[37m
          ╵                [32m-button&[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can move the "&" to the end of this selector as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:171:15:
[37m      171 │   &.horizontal [32m&-button:last-child[37m {
          │                [32m~~~~~~~~~~~~~~~~~~~[37m
          ╵                [32m-button:last-child&[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can move the "&" to the end of this selector as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:65:41:
[37m      65 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:70:41:
[37m      70 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:75:41:
[37m      75 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


Component update sent to client(s).
❯ Changes detected. Rebuilding...
✔ Changes detected. Rebuilding...
Initial chunk files | Names |  Raw size
main.js             | main  | 159.88 kB | 

Application bundle generation complete. [0.535 seconds]

[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-textwrapper" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:159:3:
[37m      159 │   &[32m-textwrapper[37m {
          │    [32m~~~~~~~~~~~~[37m
          ╵    [32m:is(-textwrapper)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-rect" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:215:3:
[37m      215 │   &[32m-rect[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-rect)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-bottom" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:237:3:
[37m      237 │   &[32m-bottom[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-bottom)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-top" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:244:3:
[37m      244 │   &[32m-top[37m {
          │    [32m~~~~[37m
          ╵    [32m:is(-top)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-left" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:250:3:
[37m      250 │   &[32m-left[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-left)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-right" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:256:3:
[37m      256 │   &[32m-right[37m {
          │    [32m~~~~~~[37m
          ╵    [32m:is(-right)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-svg" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:353:3:
[37m      353 │   &[32m-svg[37m {
          │    [32m~~~~[37m
          ╵    [32m:is(-svg)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-mask" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:357:3:
[37m      357 │   &[32m-mask[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-mask)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-node" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:372:3:
[37m      372 │   &[32m-node[37m {
          │    [32m~~~~~[37m
          ╵    [32m:is(-node)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/init.css:424:3:
[37m      424 │   &[32m-button[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-button)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-text" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:59:3:
[37m      59 │   &[32m-text[37m {
         │    [32m~~~~~[37m
         ╵    [32m:is(-text)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:123:3:
[37m      123 │   &[32m-button[37m {
          │    [32m~~~~~~~[37m
          ╵    [32m:is(-button)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:158:3:
[37m      158 │   &[32m-button:last-child[37m {
          │    [32m~~~~~~~~~~~~~~~~~~[37m
          ╵    [32m:is(-button:last-child)[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can wrap this selector in ":is(...)" as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:162:15:
[37m      162 │   &.horizontal [32m&-button[37m {
          │                [32m~~~~~~~~[37m
          ╵                [32m-button&[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can move the "&" to the end of this selector as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mCannot use type selector "-button" directly after nesting selector "&"[0m [css-syntax-error]

    ../packages/system/src/styles/style.css:171:15:
[37m      171 │   &.horizontal [32m&-button:last-child[37m {
          │                [32m~~~~~~~~~~~~~~~~~~~[37m
          ╵                [32m-button:last-child&[0m

  CSS nesting syntax does not allow the "&" selector to come before a type selector. You can move the "&" to the end of this selector as a workaround. This restriction exists to avoid problems with SASS nesting, where the same syntax means something very different that has no equivalent in real CSS (appending a suffix to the parent selector).


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8113: EdgeWrapperComponent is not used within the template of AngularFlowComponent[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/angular-flow.component.ts:35:48:
[37m      35 │ ...ports: [CommonModule, NodeWrapperComponent, [32mEdgeWrapperComponent[37m],
         ╵                                                [32m~~~~~~~~~~~~~~~~~~~~[0m


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:65:41:
[37m      65 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:70:41:
[37m      70 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


[33m▲ [43;33m[[43;30mWARNING[43;33m][0m [1mNG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be safely removed.[0m [1m[35m[plugin angular-compiler][0m

    src/app/components/angular-flow/node-wrapper/node-wrapper.component.ts:75:41:
[37m      75 │ ...-flow__node-label">{{ [32mnode().data?.['label'][37m || node().id }}</div>
         ╵                          [32m~~~~~~~~~~~~~~~~~~~~~~[0m


Component update sent to client(s).
